{"ast":null,"code":"export const BASE_URL = 'https://auth.nomoreparties.co';\nexport const register = (email, password) => {\n  return fetch(`${BASE_URL}/signup`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      email,\n      password\n    })\n  }).then(res => {\n    try {\n      if (res.status === 200) {\n        console.log('2');\n        return res.json();\n      }\n    } catch (e) {\n      console.log('1');\n      return e;\n    }\n  }).catch(err => console.log(err, ''));\n};\n\nconst getResponseData = res => {\n  return res.ok ? res.json() : Promise.reject(`Error ${res.status}`);\n};","map":{"version":3,"sources":["/home/maksim/dev/mesto-react-auth/src/components/Auth.js"],"names":["BASE_URL","register","email","password","fetch","method","headers","body","JSON","stringify","then","res","status","console","log","json","e","catch","err","getResponseData","ok","Promise","reject"],"mappings":"AAAA,OAAO,MAAMA,QAAQ,GAAG,+BAAjB;AAEP,OAAO,MAAMC,QAAQ,GAAG,CAACC,KAAD,EAAQC,QAAR,KAAqB;AAC3C,SAAOC,KAAK,CAAE,GAAEJ,QAAS,SAAb,EAAuB;AACjCK,IAAAA,MAAM,EAAE,MADyB;AAEjCC,IAAAA,OAAO,EAAE;AACP,sBAAgB;AADT,KAFwB;AAKjCC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAACP,MAAAA,KAAD;AAAQC,MAAAA;AAAR,KAAf;AAL2B,GAAvB,CAAL,CAOJO,IAPI,CAOEC,GAAD,IAAS;AACb,QAAI;AACF,UAAIA,GAAG,CAACC,MAAJ,KAAe,GAAnB,EAAuB;AACrBC,QAAAA,OAAO,CAACC,GAAR,CAAY,GAAZ;AACA,eAAOH,GAAG,CAACI,IAAJ,EAAP;AACD;AACF,KALD,CAKE,OAAMC,CAAN,EAAQ;AACNH,MAAAA,OAAO,CAACC,GAAR,CAAY,GAAZ;AACA,aAAQE,CAAR;AACH;AACF,GAjBI,EAkBJC,KAlBI,CAkBGC,GAAD,IAASL,OAAO,CAACC,GAAR,CAAYI,GAAZ,EAAiB,EAAjB,CAlBX,CAAP;AAmBD,CApBM;;AAsBP,MAAMC,eAAe,GAAIR,GAAD,IAAS;AAC/B,SAAOA,GAAG,CAACS,EAAJ,GAAST,GAAG,CAACI,IAAJ,EAAT,GAAsBM,OAAO,CAACC,MAAR,CAAgB,SAAQX,GAAG,CAACC,MAAO,EAAnC,CAA7B;AACD,CAFD","sourcesContent":["export const BASE_URL = 'https://auth.nomoreparties.co';\n\nexport const register = (email, password) => {\n  return fetch(`${BASE_URL}/signup`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({email, password})\n  })\n    .then((res) => {\n      try {\n        if (res.status === 200){\n          console.log('2')\n          return res.json();\n        }\n      } catch(e){\n          console.log('1')\n          return (e)\n      }\n    })\n    .catch((err) => console.log(err, ''));\n};\n\nconst getResponseData = (res) => {\n  return res.ok ? res.json() : Promise.reject(`Error ${res.status}`)\n}"]},"metadata":{},"sourceType":"module"}