{"ast":null,"code":"import _classCallCheck from\"/home/maksim/dev/react-mesto-api-full/frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";import _createClass from\"/home/maksim/dev/react-mesto-api-full/frontend/node_modules/@babel/runtime/helpers/esm/createClass.js\";var cohortID='cohort-39';var token='fed91f6d-1f71-4682-bc63-ccd602fc60c4';var baseURL='https://mesto.nomoreparties.co/v1/';var cardURL=\"\".concat(baseURL).concat(cohortID,\"/cards\");var userURL=\"\".concat(baseURL).concat(cohortID,\"/users/me\");var avatarURL=\"\".concat(baseURL).concat(cohortID,\"/users/me/avatar\");var Api=/*#__PURE__*/function(){function Api(userURL,cardURL,avatarURL,token){_classCallCheck(this,Api);this._userURL=userURL;this._cardURL=cardURL;this._avatarURL=avatarURL;this._token=token;this._headers={authorization:this._token,'Content-Type':'application/json'};}_createClass(Api,[{key:\"getUserInfo\",value:function getUserInfo(){var _this=this;return fetch(this._userURL,{headers:this._headers}).then(function(res){return _this._getResponseData(res);});}},{key:\"getCards\",value:function getCards(){var _this2=this;return fetch(this._cardURL,{headers:this._headers}).then(function(res){return _this2._getResponseData(res);});}},{key:\"setUserInfo\",value:function setUserInfo(userName,userDescription){var _this3=this;return fetch(this._userURL,{method:'PATCH',headers:this._headers,body:JSON.stringify({name:userName,about:userDescription})}).then(function(res){return _this3._getResponseData(res);});}},{key:\"setAvatar\",value:function setAvatar(avatarData){var _this4=this;return fetch(this._avatarURL,{method:'PATCH',headers:this._headers,body:JSON.stringify({avatar:avatarData})}).then(function(res){return _this4._getResponseData(res);});}},{key:\"setCard\",value:function setCard(placeName,placeImage){var _this5=this;return fetch(this._cardURL,{method:'POST',headers:this._headers,body:JSON.stringify({name:placeName,link:placeImage})}).then(function(res){return _this5._getResponseData(res);});}},{key:\"deleteCard\",value:function deleteCard(cardID){var _this6=this;return fetch(this._cardURL+\"/\".concat(cardID),{method:'DELETE',headers:this._headers}).then(function(res){return _this6._getResponseData(res);});}},{key:\"changeLikeCardStatus\",value:function changeLikeCardStatus(cardID,isLiked){var _this7=this;if(!isLiked){return fetch(this._cardURL+\"/\".concat(cardID,\"/likes\"),{method:'PUT',headers:this._headers}).then(function(res){return _this7._getResponseData(res);});}else{return fetch(this._cardURL+\"/\".concat(cardID,\"/likes\"),{method:'DELETE',headers:this._headers}).then(function(res){return _this7._getResponseData(res);});}}},{key:\"_getResponseData\",value:function _getResponseData(res){return res.ok?res.json():Promise.reject(\"Error \".concat(res.status));}}]);return Api;}();var api=new Api(userURL,cardURL,avatarURL,token);export default api;","map":{"version":3,"sources":["/home/maksim/dev/react-mesto-api-full/frontend/src/utils/Api.js"],"names":["cohortID","token","baseURL","cardURL","userURL","avatarURL","Api","_userURL","_cardURL","_avatarURL","_token","_headers","authorization","fetch","headers","then","res","_getResponseData","userName","userDescription","method","body","JSON","stringify","name","about","avatarData","avatar","placeName","placeImage","link","cardID","isLiked","ok","json","Promise","reject","status","api"],"mappings":"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","sourcesContent":["const cohortID = 'cohort-39';\nconst token = 'fed91f6d-1f71-4682-bc63-ccd602fc60c4';\nconst baseURL = 'https://mesto.nomoreparties.co/v1/';\nconst cardURL = `${baseURL}${cohortID}/cards`;\nconst userURL = `${baseURL}${cohortID}/users/me`;\nconst avatarURL =`${baseURL}${cohortID}/users/me/avatar`;\n\nclass Api {\n  constructor(userURL, cardURL, avatarURL, token) {\n    this._userURL = userURL;\n    this._cardURL = cardURL;\n    this._avatarURL = avatarURL;\n    this._token = token;\n    this._headers = { authorization: this._token, 'Content-Type': 'application/json' }\n  }\n\n  getUserInfo() {\n    return fetch(this._userURL, {\n      headers: this._headers\n    })\n      .then(res => this._getResponseData(res));\n  }\n\n  getCards() {\n    return fetch(this._cardURL, {\n      headers: this._headers\n    })\n      .then(res => this._getResponseData(res))\n  }\n\n  setUserInfo(userName, userDescription) {\n    return fetch(this._userURL, {\n      method: 'PATCH',\n      headers: this._headers,\n      body: JSON.stringify({\n        name: userName,\n        about: userDescription\n      })\n    })\n      .then(res => this._getResponseData(res))\n  }\n\n  setAvatar(avatarData) {\n    return fetch(this._avatarURL, {\n      method: 'PATCH',\n      headers: this._headers,\n      body: JSON.stringify({\n        avatar: avatarData\n      })\n    })\n      .then(res => this._getResponseData(res))\n  }\n\n  setCard(placeName, placeImage) {\n    return fetch(this._cardURL, {\n      method: 'POST',\n      headers: this._headers,\n      body: JSON.stringify({\n        name: placeName,\n        link: placeImage\n      })\n    })\n      .then(res => this._getResponseData(res))\n  }\n\n  deleteCard(cardID) {\n    return fetch(this._cardURL + `/${cardID}`, {\n      method: 'DELETE',\n      headers: this._headers\n    })\n      .then(res => this._getResponseData(res));\n  }\n\n  changeLikeCardStatus(cardID, isLiked) {\n    if (!isLiked) {\n      return fetch(this._cardURL + `/${cardID}/likes`, {\n        method: 'PUT',\n        headers: this._headers\n      })\n        .then(res => this._getResponseData(res));\n    } else {\n        return fetch(this._cardURL + `/${cardID}/likes`, {\n          method: 'DELETE',\n          headers: this._headers\n        })\n          .then(res => this._getResponseData(res));\n      }\n  }\n\n  _getResponseData(res) {\n    return res.ok ? res.json() : Promise.reject(`Error ${res.status}`)\n  }\n}\n\nconst api = new Api(userURL, cardURL, avatarURL, token);\n\nexport default api;\n"]},"metadata":{},"sourceType":"module"}