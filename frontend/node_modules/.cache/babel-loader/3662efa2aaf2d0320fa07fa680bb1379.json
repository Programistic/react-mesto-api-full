{"ast":null,"code":"var _jsxFileName = \"/home/maksim/dev/mesto-react/src/components/App.js\";\nimport { Component } from 'react';\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\nimport api from '../utils/Api';\nimport Header from './Header';\nimport Main from './Main';\nimport Footer from './Footer';\nimport EditProfilePopup from './EditProfilePopup';\nimport EditAvatarPopup from './EditAvatarPopup';\nimport AddPlacePopup from './AddPlacePopup';\nimport ImagePopup from './ImagePopup';\nimport ConfirmDeletePopup from './ConfirmDeletePopup';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleEditProfileClick = () => {\n      this.setState({\n        isEditProfilePopupOpen: true\n      });\n    };\n\n    this.handleAddPlaceClick = () => {\n      this.setState({\n        isAddPlacePopupOpen: true\n      });\n    };\n\n    this.handleEditAvatarClick = () => {\n      this.setState({\n        isEditAvatarPopupOpen: true\n      });\n    };\n\n    this.handleConfirmDeleteCardClick = () => {\n      this.setState({\n        isConfirmPopupOpen: true\n      });\n    };\n\n    this.handleEscClick = event => {\n      if (event.key === 'Escape') {\n        this.closeAllPopups();\n      }\n    };\n\n    this.handleOutsideClick = event => {\n      if (event.target.classList.contains('popup')) {\n        this.closeAllPopups();\n      }\n    };\n\n    this.handleUpdateUser = (userName, userDescription) => {\n      api.setUserInfo(userName, userDescription).then(userData => {\n        this.setState({\n          currentUser: userData,\n          resetTextOnSubmit: true\n        });\n        this.closeAllPopups();\n      }).catch(err => {\n        console.log(err);\n      });\n    };\n\n    this.handleUpdateAvatar = userAvatar => {\n      api.setAvatar(userAvatar).then(userData => {\n        this.setState({\n          currentUser: userData\n        });\n        this.closeAllPopups();\n      }).catch(err => {\n        console.log(err);\n      });\n    };\n\n    this.handleCardLike = card => {\n      const isLiked = card.likes.some(like => like._id === this.state.currentUser._id);\n      api.changeLikeCardStatus(card._id, isLiked).then(getCard => {\n        this.setState({\n          cards: this.state.cards.map(oldCard => oldCard._id === getCard._id ? getCard : oldCard)\n        });\n      }).catch(err => {\n        console.log(err);\n      });\n    };\n\n    this.handleCardDelete = () => {\n      api.deleteCard(this.state.deleteCard._id).then(() => {\n        this.setState({\n          cards: this.state.cards.filter(currentCard => currentCard._id !== this.state.deleteCard._id),\n          isConfirmPopupOpen: false\n        });\n      }).catch(err => {\n        console.log(err);\n      });\n    };\n\n    this.handleCardClick = card => {\n      this.setState({\n        selectedCard: card\n      });\n    };\n\n    this.handleAddPlace = (placeName, placeImage) => {\n      api.setCard(placeName, placeImage).then(newCard => {\n        this.setState({\n          cards: [newCard, ...this.state.cards]\n        });\n        this.closeAllPopups();\n      }).catch(err => {\n        console.log(err);\n      });\n    };\n\n    this.closeAllPopups = () => {\n      this.setState({\n        isEditProfilePopupOpen: false,\n        isAddPlacePopupOpen: false,\n        isEditAvatarPopupOpen: false,\n        isConfirmPopupOpen: false,\n        selectedCard: {}\n      });\n    };\n\n    this.openConfirmDeletePopup = card => {\n      this.setState({\n        deleteCard: card,\n        isConfirmPopupOpen: true\n      });\n    };\n\n    this.state = {\n      isEditProfilePopupOpen: false,\n      isAddPlacePopupOpen: false,\n      isEditAvatarPopupOpen: false,\n      isConfirmPopupOpen: false,\n      selectedCard: {},\n      deleteCard: {},\n      cards: [],\n      currentUser: {}\n    };\n  }\n\n  componentDidMount() {\n    api.getUserInfo().then(userData => {\n      this.setState({\n        currentUser: userData\n      });\n    }).catch(err => {\n      console.log(err);\n    });\n    api.getCards().then(getCardsArray => {\n      this.setState({\n        cards: getCardsArray\n      });\n    }).catch(err => {\n      console.log(err);\n    });\n    document.addEventListener(\"keydown\", this.handleEscClick);\n    document.addEventListener(\"click\", this.handleOutsideClick);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener(\"keydown\", this.handleEscClick);\n    document.addEventListener(\"click\", this.handleOutsideClick);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"page\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: /*#__PURE__*/_jsxDEV(CurrentUserContext.Provider, {\n          value: this.state.currentUser,\n          children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Main, {\n            cards: this.state.cards,\n            onEditProfile: this.handleEditProfileClick,\n            onAddPlace: this.handleAddPlaceClick,\n            onEditAvatar: this.handleEditAvatarClick,\n            onCardLike: this.handleCardLike,\n            onCardDelete: this.openConfirmDeletePopup,\n            onCardClick: this.handleCardClick\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(EditProfilePopup, {\n            isOpen: this.state.isEditProfilePopupOpen,\n            onUpdateUser: this.handleUpdateUser,\n            onClose: this.closeAllPopups\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 185,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(EditAvatarPopup, {\n            isOpen: this.state.isEditAvatarPopupOpen,\n            onUpdateAvatar: this.handleUpdateAvatar,\n            onClose: this.closeAllPopups\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(AddPlacePopup, {\n            isOpen: this.state.isAddPlacePopupOpen,\n            onAddPlace: this.handleAddPlace,\n            onClose: this.closeAllPopups\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 197,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ConfirmDeletePopup, {\n            isOpen: this.state.isConfirmPopupOpen,\n            onConfirmDeleteCard: this.handleCardDelete,\n            onClose: this.closeAllPopups\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 203,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ImagePopup, {\n            card: this.state.selectedCard,\n            onClose: this.closeAllPopups\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/maksim/dev/mesto-react/src/components/App.js"],"names":["Component","CurrentUserContext","api","Header","Main","Footer","EditProfilePopup","EditAvatarPopup","AddPlacePopup","ImagePopup","ConfirmDeletePopup","App","constructor","props","handleEditProfileClick","setState","isEditProfilePopupOpen","handleAddPlaceClick","isAddPlacePopupOpen","handleEditAvatarClick","isEditAvatarPopupOpen","handleConfirmDeleteCardClick","isConfirmPopupOpen","handleEscClick","event","key","closeAllPopups","handleOutsideClick","target","classList","contains","handleUpdateUser","userName","userDescription","setUserInfo","then","userData","currentUser","resetTextOnSubmit","catch","err","console","log","handleUpdateAvatar","userAvatar","setAvatar","handleCardLike","card","isLiked","likes","some","like","_id","state","changeLikeCardStatus","getCard","cards","map","oldCard","handleCardDelete","deleteCard","filter","currentCard","handleCardClick","selectedCard","handleAddPlace","placeName","placeImage","setCard","newCard","openConfirmDeletePopup","componentDidMount","getUserInfo","getCards","getCardsArray","document","addEventListener","componentWillUnmount","removeEventListener","render"],"mappings":";AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,SAASC,kBAAT,QAAmC,gCAAnC;AACA,OAAOC,GAAP,MAAgB,cAAhB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,gBAAP,MAA6B,oBAA7B;AACA,OAAOC,eAAP,MAA4B,mBAA5B;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,kBAAP,MAA+B,sBAA/B;;;AAEA,MAAMC,GAAN,SAAkBX,SAAlB,CAA4B;AAC1BY,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAenBC,sBAfmB,GAeM,MAAM;AAC7B,WAAKC,QAAL,CAAc;AAAEC,QAAAA,sBAAsB,EAAE;AAA1B,OAAd;AACD,KAjBkB;;AAAA,SAmBnBC,mBAnBmB,GAmBG,MAAM;AAC1B,WAAKF,QAAL,CAAc;AAAEG,QAAAA,mBAAmB,EAAE;AAAvB,OAAd;AACD,KArBkB;;AAAA,SAuBnBC,qBAvBmB,GAuBK,MAAM;AAC5B,WAAKJ,QAAL,CAAc;AAAEK,QAAAA,qBAAqB,EAAE;AAAzB,OAAd;AACD,KAzBkB;;AAAA,SA2BnBC,4BA3BmB,GA2BY,MAAM;AACnC,WAAKN,QAAL,CAAc;AAAEO,QAAAA,kBAAkB,EAAE;AAAtB,OAAd;AACD,KA7BkB;;AAAA,SA+BnBC,cA/BmB,GA+BDC,KAAD,IAAW;AAC1B,UAAIA,KAAK,CAACC,GAAN,KAAc,QAAlB,EAA4B;AAC1B,aAAKC,cAAL;AACD;AACF,KAnCkB;;AAAA,SAqCnBC,kBArCmB,GAqCGH,KAAD,IAAW;AAC9B,UAAIA,KAAK,CAACI,MAAN,CAAaC,SAAb,CAAuBC,QAAvB,CAAgC,OAAhC,CAAJ,EAA8C;AAC5C,aAAKJ,cAAL;AACD;AACF,KAzCkB;;AAAA,SA2CnBK,gBA3CmB,GA2CA,CAACC,QAAD,EAAWC,eAAX,KAA+B;AAChD/B,MAAAA,GAAG,CAACgC,WAAJ,CAAgBF,QAAhB,EAA0BC,eAA1B,EACGE,IADH,CACQC,QAAQ,IAAI;AAChB,aAAKrB,QAAL,CAAc;AAAEsB,UAAAA,WAAW,EAAED,QAAf;AAAyBE,UAAAA,iBAAiB,EAAE;AAA5C,SAAd;AACA,aAAKZ,cAAL;AACD,OAJH,EAKGa,KALH,CAKUC,GAAD,IAAS;AACdC,QAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACD,OAPH;AAQD,KApDkB;;AAAA,SAsDnBG,kBAtDmB,GAsDGC,UAAD,IAAgB;AACnC1C,MAAAA,GAAG,CAAC2C,SAAJ,CAAcD,UAAd,EACGT,IADH,CACQC,QAAQ,IAAI;AAChB,aAAKrB,QAAL,CAAc;AAAEsB,UAAAA,WAAW,EAAED;AAAf,SAAd;AACA,aAAKV,cAAL;AACD,OAJH,EAKGa,KALH,CAKUC,GAAD,IAAS;AACdC,QAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACD,OAPH;AAQD,KA/DkB;;AAAA,SAiEnBM,cAjEmB,GAiEDC,IAAD,IAAU;AAEzB,YAAMC,OAAO,GAAGD,IAAI,CAACE,KAAL,CAAWC,IAAX,CAAgBC,IAAI,IAAIA,IAAI,CAACC,GAAL,KAAa,KAAKC,KAAL,CAAWhB,WAAX,CAAuBe,GAA5D,CAAhB;AAEAlD,MAAAA,GAAG,CAACoD,oBAAJ,CAAyBP,IAAI,CAACK,GAA9B,EAAmCJ,OAAnC,EACGb,IADH,CACQoB,OAAO,IAAI;AACf,aAAKxC,QAAL,CAAc;AAAEyC,UAAAA,KAAK,EAAE,KAAKH,KAAL,CAAWG,KAAX,CAAiBC,GAAjB,CAAqBC,OAAO,IAAIA,OAAO,CAACN,GAAR,KAAgBG,OAAO,CAACH,GAAxB,GAA8BG,OAA9B,GAAwCG,OAAxE;AAAT,SAAd;AACD,OAHH,EAIGnB,KAJH,CAISC,GAAG,IAAI;AACZC,QAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACD,OANH;AAOD,KA5EkB;;AAAA,SA8EnBmB,gBA9EmB,GA8EA,MAAM;AACvBzD,MAAAA,GAAG,CAAC0D,UAAJ,CAAe,KAAKP,KAAL,CAAWO,UAAX,CAAsBR,GAArC,EACGjB,IADH,CACQ,MAAM;AACV,aAAKpB,QAAL,CACE;AACEyC,UAAAA,KAAK,EAAE,KAAKH,KAAL,CAAWG,KAAX,CAAiBK,MAAjB,CAAwBC,WAAW,IAAIA,WAAW,CAACV,GAAZ,KAAoB,KAAKC,KAAL,CAAWO,UAAX,CAAsBR,GAAjF,CADT;AAEE9B,UAAAA,kBAAkB,EAAE;AAFtB,SADF;AAMD,OARH,EASGiB,KATH,CASUC,GAAD,IAAS;AACdC,QAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACD,OAXH;AAYD,KA3FkB;;AAAA,SA6FnBuB,eA7FmB,GA6FAhB,IAAD,IAAU;AAC1B,WAAKhC,QAAL,CAAc;AAAEiD,QAAAA,YAAY,EAAEjB;AAAhB,OAAd;AACD,KA/FkB;;AAAA,SAiGnBkB,cAjGmB,GAiGF,CAACC,SAAD,EAAYC,UAAZ,KAA2B;AAC1CjE,MAAAA,GAAG,CAACkE,OAAJ,CAAYF,SAAZ,EAAuBC,UAAvB,EACChC,IADD,CACMkC,OAAO,IAAI;AACf,aAAKtD,QAAL,CAAc;AAAEyC,UAAAA,KAAK,EAAE,CAACa,OAAD,EAAU,GAAG,KAAKhB,KAAL,CAAWG,KAAxB;AAAT,SAAd;AACA,aAAK9B,cAAL;AACD,OAJD,EAKCa,KALD,CAKQC,GAAD,IAAS;AACdC,QAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACD,OAPD;AAQD,KA1GkB;;AAAA,SAsInBd,cAtImB,GAsIF,MAAM;AACrB,WAAKX,QAAL,CACE;AACEC,QAAAA,sBAAsB,EAAE,KAD1B;AAEEE,QAAAA,mBAAmB,EAAE,KAFvB;AAGEE,QAAAA,qBAAqB,EAAE,KAHzB;AAIEE,QAAAA,kBAAkB,EAAE,KAJtB;AAKE0C,QAAAA,YAAY,EAAE;AALhB,OADF;AASD,KAhJkB;;AAAA,SAkJnBM,sBAlJmB,GAkJOvB,IAAD,IAAU;AACjC,WAAKhC,QAAL,CAAc;AAAE6C,QAAAA,UAAU,EAAEb,IAAd;AAAoBzB,QAAAA,kBAAkB,EAAE;AAAxC,OAAd;AACD,KApJkB;;AAGjB,SAAK+B,KAAL,GAAa;AACXrC,MAAAA,sBAAsB,EAAE,KADb;AAEXE,MAAAA,mBAAmB,EAAE,KAFV;AAGXE,MAAAA,qBAAqB,EAAE,KAHZ;AAIXE,MAAAA,kBAAkB,EAAE,KAJT;AAKX0C,MAAAA,YAAY,EAAE,EALH;AAMXJ,MAAAA,UAAU,EAAE,EAND;AAOXJ,MAAAA,KAAK,EAAE,EAPI;AAQXnB,MAAAA,WAAW,EAAE;AARF,KAAb;AAUD;;AA+FDkC,EAAAA,iBAAiB,GAAG;AAClBrE,IAAAA,GAAG,CAACsE,WAAJ,GACGrC,IADH,CACQC,QAAQ,IAAI;AAChB,WAAKrB,QAAL,CAAc;AAAEsB,QAAAA,WAAW,EAAED;AAAf,OAAd;AACD,KAHH,EAIGG,KAJH,CAIUC,GAAD,IAAS;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACD,KANH;AAQEtC,IAAAA,GAAG,CAACuE,QAAJ,GACCtC,IADD,CACMuC,aAAa,IAAI;AACrB,WAAK3D,QAAL,CAAc;AAAEyC,QAAAA,KAAK,EAAEkB;AAAT,OAAd;AACD,KAHD,EAICnC,KAJD,CAIOC,GAAG,IAAI;AACZC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACD,KAND;AAQFmC,IAAAA,QAAQ,CAACC,gBAAT,CAA0B,SAA1B,EAAqC,KAAKrD,cAA1C;AACAoD,IAAAA,QAAQ,CAACC,gBAAT,CAA0B,OAA1B,EAAmC,KAAKjD,kBAAxC;AACD;;AAEDkD,EAAAA,oBAAoB,GAAG;AACrBF,IAAAA,QAAQ,CAACG,mBAAT,CAA6B,SAA7B,EAAwC,KAAKvD,cAA7C;AACAoD,IAAAA,QAAQ,CAACC,gBAAT,CAA0B,OAA1B,EAAmC,KAAKjD,kBAAxC;AACD;;AAkBDoD,EAAAA,MAAM,GAAG;AACP,wBACE;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA,6BACE;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA,+BAEE,QAAC,kBAAD,CAAoB,QAApB;AAA6B,UAAA,KAAK,EAAE,KAAK1B,KAAL,CAAWhB,WAA/C;AAAA,kCAEE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,kBAFF,eAIE,QAAC,IAAD;AACE,YAAA,KAAK,EAAE,KAAKgB,KAAL,CAAWG,KADpB;AAEE,YAAA,aAAa,EAAE,KAAK1C,sBAFtB;AAGE,YAAA,UAAU,EAAE,KAAKG,mBAHnB;AAIE,YAAA,YAAY,EAAE,KAAKE,qBAJrB;AAKE,YAAA,UAAU,EAAE,KAAK2B,cALnB;AAME,YAAA,YAAY,EAAE,KAAKwB,sBANrB;AAOE,YAAA,WAAW,EAAE,KAAKP;AAPpB;AAAA;AAAA;AAAA;AAAA,kBAJF,eAcE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,kBAdF,eAgBE,QAAC,gBAAD;AACE,YAAA,MAAM,EAAE,KAAKV,KAAL,CAAWrC,sBADrB;AAEE,YAAA,YAAY,EAAE,KAAKe,gBAFrB;AAGE,YAAA,OAAO,EAAE,KAAKL;AAHhB;AAAA;AAAA;AAAA;AAAA,kBAhBF,eAsBE,QAAC,eAAD;AACE,YAAA,MAAM,EAAE,KAAK2B,KAAL,CAAWjC,qBADrB;AAEE,YAAA,cAAc,EAAE,KAAKuB,kBAFvB;AAGE,YAAA,OAAO,EAAE,KAAKjB;AAHhB;AAAA;AAAA;AAAA;AAAA,kBAtBF,eA4BE,QAAC,aAAD;AACE,YAAA,MAAM,EAAE,KAAK2B,KAAL,CAAWnC,mBADrB;AAEE,YAAA,UAAU,EAAE,KAAK+C,cAFnB;AAGE,YAAA,OAAO,EAAE,KAAKvC;AAHhB;AAAA;AAAA;AAAA;AAAA,kBA5BF,eAkCE,QAAC,kBAAD;AACE,YAAA,MAAM,EAAE,KAAK2B,KAAL,CAAW/B,kBADrB;AAEE,YAAA,mBAAmB,EAAE,KAAKqC,gBAF5B;AAGE,YAAA,OAAO,EAAE,KAAKjC;AAHhB;AAAA;AAAA;AAAA;AAAA,kBAlCF,eAwCE,QAAC,UAAD;AACE,YAAA,IAAI,EAAE,KAAK2B,KAAL,CAAWW,YADnB;AAEE,YAAA,OAAO,EAAE,KAAKtC;AAFhB;AAAA;AAAA;AAAA;AAAA,kBAxCF;AAAA;AAAA;AAAA;AAAA;AAAA;AAFF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AAsDD;;AA9MyB;;AAiN5B,eAAef,GAAf","sourcesContent":["import { Component } from 'react';\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\nimport api from '../utils/Api';\nimport Header from './Header';\nimport Main from './Main';\nimport Footer from './Footer';\nimport EditProfilePopup from './EditProfilePopup';\nimport EditAvatarPopup from './EditAvatarPopup';\nimport AddPlacePopup from './AddPlacePopup';\nimport ImagePopup from './ImagePopup';\nimport ConfirmDeletePopup from './ConfirmDeletePopup';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      isEditProfilePopupOpen: false,\n      isAddPlacePopupOpen: false,\n      isEditAvatarPopupOpen: false,\n      isConfirmPopupOpen: false,\n      selectedCard: {},\n      deleteCard: {},\n      cards: [],\n      currentUser: {},\n    };\n  }\n\n  handleEditProfileClick = () => {\n    this.setState({ isEditProfilePopupOpen: true });\n  }\n\n  handleAddPlaceClick = () => {\n    this.setState({ isAddPlacePopupOpen: true });\n  }\n\n  handleEditAvatarClick = () => {\n    this.setState({ isEditAvatarPopupOpen: true });\n  }\n\n  handleConfirmDeleteCardClick = () => {\n    this.setState({ isConfirmPopupOpen: true });\n  }\n\n  handleEscClick = (event) => {\n    if (event.key === 'Escape') {\n      this.closeAllPopups();\n    }\n  }\n\n  handleOutsideClick = (event) => {\n    if (event.target.classList.contains('popup')) {\n      this.closeAllPopups();\n    }\n  }\n\n  handleUpdateUser = (userName, userDescription) => {\n    api.setUserInfo(userName, userDescription)\n      .then(userData => {\n        this.setState({ currentUser: userData, resetTextOnSubmit: true });\n        this.closeAllPopups();\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }\n\n  handleUpdateAvatar = (userAvatar) => {\n    api.setAvatar(userAvatar)\n      .then(userData => {\n        this.setState({ currentUser: userData });\n        this.closeAllPopups();\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }\n\n  handleCardLike = (card) => {\n\n    const isLiked = card.likes.some(like => like._id === this.state.currentUser._id);\n\n    api.changeLikeCardStatus(card._id, isLiked)\n      .then(getCard => {\n        this.setState({ cards: this.state.cards.map(oldCard => oldCard._id === getCard._id ? getCard : oldCard) });\n      })\n      .catch(err => {\n        console.log(err);\n      });\n  }\n\n  handleCardDelete = () => {\n    api.deleteCard(this.state.deleteCard._id)\n      .then(() => {\n        this.setState(\n          {\n            cards: this.state.cards.filter(currentCard => currentCard._id !== this.state.deleteCard._id),\n            isConfirmPopupOpen: false\n          }\n        ); \n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }\n\n  handleCardClick = (card) => {\n    this.setState({ selectedCard: card });\n  }\n\n  handleAddPlace = (placeName, placeImage) => {\n    api.setCard(placeName, placeImage)\n    .then(newCard => {\n      this.setState({ cards: [newCard, ...this.state.cards] });\n      this.closeAllPopups();\n    })\n    .catch((err) => {\n      console.log(err);\n    });\n  }\n\n  componentDidMount() {\n    api.getUserInfo()\n      .then(userData => {\n        this.setState({ currentUser: userData });\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n\n      api.getCards()\n      .then(getCardsArray => {\n        this.setState({ cards: getCardsArray });\n      })\n      .catch(err => {\n        console.log(err);\n      });\n\n    document.addEventListener(\"keydown\", this.handleEscClick);\n    document.addEventListener(\"click\", this.handleOutsideClick);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener(\"keydown\", this.handleEscClick);\n    document.addEventListener(\"click\", this.handleOutsideClick);\n  }\n\n  closeAllPopups = () => {\n    this.setState(\n      {\n        isEditProfilePopupOpen: false,\n        isAddPlacePopupOpen: false,\n        isEditAvatarPopupOpen: false,\n        isConfirmPopupOpen: false,\n        selectedCard: {}\n      }\n    );\n  }\n\n  openConfirmDeletePopup = (card) => {\n    this.setState({ deleteCard: card, isConfirmPopupOpen: true })\n  }\n\n  render() {\n    return (\n      <div className=\"page\">\n        <div className=\"container\">\n\n          <CurrentUserContext.Provider value={this.state.currentUser}>\n\n            <Header />\n\n            <Main\n              cards={this.state.cards}\n              onEditProfile={this.handleEditProfileClick}\n              onAddPlace={this.handleAddPlaceClick}\n              onEditAvatar={this.handleEditAvatarClick}\n              onCardLike={this.handleCardLike}\n              onCardDelete={this.openConfirmDeletePopup}\n              onCardClick={this.handleCardClick}\n            />\n\n            <Footer />\n\n            <EditProfilePopup\n              isOpen={this.state.isEditProfilePopupOpen}\n              onUpdateUser={this.handleUpdateUser}\n              onClose={this.closeAllPopups}\n            />\n\n            <EditAvatarPopup\n              isOpen={this.state.isEditAvatarPopupOpen}\n              onUpdateAvatar={this.handleUpdateAvatar}\n              onClose={this.closeAllPopups}\n            />\n\n            <AddPlacePopup\n              isOpen={this.state.isAddPlacePopupOpen}\n              onAddPlace={this.handleAddPlace}\n              onClose={this.closeAllPopups}\n            />\n\n            <ConfirmDeletePopup\n              isOpen={this.state.isConfirmPopupOpen}\n              onConfirmDeleteCard={this.handleCardDelete}\n              onClose={this.closeAllPopups}\n            />\n\n            <ImagePopup\n              card={this.state.selectedCard}\n              onClose={this.closeAllPopups}\n            />\n\n          </CurrentUserContext.Provider>\n          \n        </div>\n      </div>\n    );\n  } \n}\n\nexport default App;\n\n"]},"metadata":{},"sourceType":"module"}