{"ast":null,"code":"var _jsxFileName = \"/home/maksim/dev/mesto-react-auth/src/components/App.js\";\nimport { Component } from 'react';\nimport { Route, Switch, Redirect, withRouter } from 'react-router-dom';\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\nimport api from '../utils/Api';\nimport Header from './Header';\nimport Main from './Main';\nimport Footer from './Footer';\nimport EditProfilePopup from './EditProfilePopup';\nimport EditAvatarPopup from './EditAvatarPopup';\nimport AddPlacePopup from './AddPlacePopup';\nimport ImagePopup from './ImagePopup';\nimport ConfirmDeletePopup from './ConfirmDeletePopup';\nimport ProtectedRoute from './ProtectedRoute';\nimport Register from './Register';\nimport Login from './Login';\nimport InfoTooltip from './InfoTooltip';\nimport * as Auth from '../utils/Auth';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleEditProfileClick = () => {\n      this.setState({\n        isEditProfilePopupOpen: true\n      });\n    };\n\n    this.handleAddPlaceClick = () => {\n      this.setState({\n        isAddPlacePopupOpen: true\n      });\n    };\n\n    this.handleEditAvatarClick = () => {\n      this.setState({\n        isEditAvatarPopupOpen: true\n      });\n    };\n\n    this.handleConfirmDeleteCardClick = () => {\n      this.setState({\n        isConfirmPopupOpen: true\n      });\n    };\n\n    this.handleEscClick = event => {\n      if (event.key === 'Escape') {\n        this.closeAllPopups();\n      }\n    };\n\n    this.handleOutsideClick = event => {\n      if (event.target.classList.contains('popup')) {\n        this.closeAllPopups();\n      }\n    };\n\n    this.handleUpdateUser = (userName, userDescription) => {\n      api.setUserInfo(userName, userDescription).then(userData => {\n        this.setState({\n          currentUser: userData\n        });\n        this.closeAllPopups();\n      }).catch(err => {\n        console.log(err);\n      });\n    };\n\n    this.handleUpdateAvatar = userAvatar => {\n      api.setAvatar(userAvatar).then(userData => {\n        this.setState({\n          currentUser: userData\n        });\n        this.closeAllPopups();\n      }).catch(err => {\n        console.log(err);\n      });\n    };\n\n    this.handleCardLike = card => {\n      const isLiked = card.likes.some(like => like._id === this.state.currentUser._id);\n      api.changeLikeCardStatus(card._id, isLiked).then(getCard => {\n        this.setState({\n          cards: this.state.cards.map(oldCard => oldCard._id === getCard._id ? getCard : oldCard)\n        });\n      }).catch(err => {\n        console.log(err);\n      });\n    };\n\n    this.handleCardDelete = () => {\n      api.deleteCard(this.state.deleteCard._id).then(() => {\n        this.setState({\n          cards: this.state.cards.filter(currentCard => currentCard._id !== this.state.deleteCard._id),\n          isConfirmPopupOpen: false\n        });\n      }).catch(err => {\n        console.log(err);\n      });\n    };\n\n    this.handleCardClick = card => {\n      this.setState({\n        selectedCard: card\n      });\n    };\n\n    this.handleAddPlace = (placeName, placeImage) => {\n      api.setCard(placeName, placeImage).then(newCard => {\n        this.setState({\n          cards: [newCard, ...this.state.cards]\n        });\n        this.closeAllPopups();\n      }).catch(err => {\n        console.log(err);\n      });\n    };\n\n    this.closeAllPopups = () => {\n      this.setState({\n        isEditProfilePopupOpen: false,\n        isAddPlacePopupOpen: false,\n        isEditAvatarPopupOpen: false,\n        isConfirmPopupOpen: false,\n        isInfoTooltipOpen: false,\n        selectedCard: {}\n      });\n    };\n\n    this.openConfirmDeletePopup = card => {\n      this.setState({\n        deleteCard: card,\n        isConfirmPopupOpen: true\n      });\n    };\n\n    this.handleLogin = () => {\n      this.setState({\n        loggedIn: true\n      });\n    };\n\n    this.resetLoggedIn = () => {\n      this.setState({\n        loggedIn: false\n      });\n    };\n\n    this.handleEmail = userEmail => {\n      this.setState({\n        userEmail: userEmail\n      });\n    };\n\n    this.tokenCheck = () => {\n      const jwt = localStorage.getItem('jwt');\n\n      if (jwt) {\n        Auth.getContent(jwt).then(res => {\n          if (res) {\n            this.setState({\n              loggedIn: true,\n              userEmail: res.data.email\n            }, () => {\n              this.props.history.push(\"/main\");\n            });\n          }\n        }).catch(err => {\n          console.log(err);\n        });\n      }\n    };\n\n    this.handleRegisterSubmit = (userEmail, userPassword) => {\n      Auth.register(userEmail, userPassword).then(res => {\n        if (res) {\n          this.openTooltipSuccess();\n        } else {\n          this.openTooltipFail();\n        }\n      }).catch(err => {\n        console.log(err);\n      });\n    };\n\n    this.handleLoginSubmit = (userEmail, userPassword) => {\n      Auth.authorize(userEmail, userPassword).then(data => {\n        if (data !== undefined && data.token) {\n          localStorage.setItem('jwt', data.token);\n          this.setState({\n            loggedIn: true,\n            userEmail: userEmail\n          });\n          this.props.history.push(\"/main\");\n        } else {\n          this.props.history.push(\"/signin\");\n        }\n      }).catch(err => {\n        console.log(err);\n      });\n    };\n\n    this.openTooltipSuccess = () => {\n      this.setState({\n        isSuccess: true,\n        loggedIn: true,\n        isInfoTooltipOpen: true,\n        infoTooltipButtonName: 'success',\n        infoTooltipMessage: 'Вы успешно зарегистрировались!'\n      });\n    };\n\n    this.openTooltipFail = () => {\n      this.setState({\n        isSuccess: false,\n        isInfoTooltipOpen: true,\n        infoTooltipButtonName: 'fail',\n        infoTooltipMessage: 'Что-то пошло не так! Попробуйте ещё раз.'\n      });\n    };\n\n    this.handleConfirmRegister = () => {\n      this.closeAllPopups();\n\n      if (this.state.isSuccess) {\n        this.props.history.push(\"/main\");\n      }\n    };\n\n    this.state = {\n      isEditProfilePopupOpen: false,\n      isAddPlacePopupOpen: false,\n      isEditAvatarPopupOpen: false,\n      isConfirmPopupOpen: false,\n      isInfoTooltipOpen: false,\n      infoTooltipButtonName: '',\n      infoTooltipMessage: '',\n      isSuccess: false,\n      userEmail: '',\n      selectedCard: {},\n      deleteCard: {},\n      cards: [],\n      currentUser: {},\n      loggedIn: false\n    };\n    this.handleLogin = this.handleLogin.bind(this);\n    this.tokenCheck = this.tokenCheck.bind(this);\n  }\n\n  componentDidMount() {\n    api.getUserInfo().then(userData => {\n      this.setState({\n        currentUser: userData\n      });\n    }).catch(err => {\n      console.log(err);\n    });\n    api.getCards().then(getCardsArray => {\n      this.setState({\n        cards: getCardsArray\n      });\n    }).catch(err => {\n      console.log(err);\n    });\n    this.tokenCheck();\n    document.addEventListener(\"keydown\", this.handleEscClick);\n    document.addEventListener(\"click\", this.handleOutsideClick);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener(\"keydown\", this.handleEscClick);\n    document.addEventListener(\"click\", this.handleOutsideClick);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"page\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: /*#__PURE__*/_jsxDEV(CurrentUserContext.Provider, {\n          value: this.state.currentUser,\n          children: [/*#__PURE__*/_jsxDEV(Header, {\n            userEmail: this.state.userEmail,\n            resetLoggedIn: this.resetLoggedIn\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 283,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Switch, {\n            children: [/*#__PURE__*/_jsxDEV(ProtectedRoute, {\n              exact: true,\n              path: \"/main\",\n              loggedIn: this.state.loggedIn,\n              cards: this.state.cards,\n              onEditProfile: this.handleEditProfileClick,\n              onAddPlace: this.handleAddPlaceClick,\n              onEditAvatar: this.handleEditAvatarClick,\n              onCardLike: this.handleCardLike,\n              onCardDelete: this.openConfirmDeletePopup,\n              onCardClick: this.handleCardClick,\n              component: Main\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 287,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Route, {\n              path: \"/signin\",\n              children: /*#__PURE__*/_jsxDEV(Login, {\n                handleLoginSubmit: this.handleLoginSubmit\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 301,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 300,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Route, {\n              path: \"/signup\",\n              children: /*#__PURE__*/_jsxDEV(Register, {\n                handleRegisterSubmit: this.handleRegisterSubmit\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 305,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 304,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Route, {\n              children: this.state.loggedIn ? /*#__PURE__*/_jsxDEV(Redirect, {\n                to: \"/main\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 309,\n                columnNumber: 40\n              }, this) : /*#__PURE__*/_jsxDEV(Redirect, {\n                to: \"/signin\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 309,\n                columnNumber: 66\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 308,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 285,\n            columnNumber: 13\n          }, this), this.state.loggedIn && /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 314,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(EditProfilePopup, {\n            isOpen: this.state.isEditProfilePopupOpen,\n            onUpdateUser: this.handleUpdateUser,\n            onClose: this.closeAllPopups\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 316,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(EditAvatarPopup, {\n            isOpen: this.state.isEditAvatarPopupOpen,\n            onUpdateAvatar: this.handleUpdateAvatar,\n            onClose: this.closeAllPopups\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 322,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(AddPlacePopup, {\n            isOpen: this.state.isAddPlacePopupOpen,\n            onAddPlace: this.handleAddPlace,\n            onClose: this.closeAllPopups\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 328,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ConfirmDeletePopup, {\n            isOpen: this.state.isConfirmPopupOpen,\n            onConfirmDeleteCard: this.handleCardDelete,\n            onClose: this.closeAllPopups\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 334,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ImagePopup, {\n            card: this.state.selectedCard,\n            onClose: this.closeAllPopups\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 340,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(InfoTooltip, {\n            isOpen: this.state.isInfoTooltipOpen,\n            message: this.state.infoTooltipMessage,\n            buttonName: this.state.infoTooltipButtonName,\n            onConfirm: this.handleConfirmRegister\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 345,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 281,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 279,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 278,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default _c = withRouter(App);\n\nvar _c;\n\n$RefreshReg$(_c, \"%default%\");","map":{"version":3,"sources":["/home/maksim/dev/mesto-react-auth/src/components/App.js"],"names":["Component","Route","Switch","Redirect","withRouter","CurrentUserContext","api","Header","Main","Footer","EditProfilePopup","EditAvatarPopup","AddPlacePopup","ImagePopup","ConfirmDeletePopup","ProtectedRoute","Register","Login","InfoTooltip","Auth","App","constructor","props","handleEditProfileClick","setState","isEditProfilePopupOpen","handleAddPlaceClick","isAddPlacePopupOpen","handleEditAvatarClick","isEditAvatarPopupOpen","handleConfirmDeleteCardClick","isConfirmPopupOpen","handleEscClick","event","key","closeAllPopups","handleOutsideClick","target","classList","contains","handleUpdateUser","userName","userDescription","setUserInfo","then","userData","currentUser","catch","err","console","log","handleUpdateAvatar","userAvatar","setAvatar","handleCardLike","card","isLiked","likes","some","like","_id","state","changeLikeCardStatus","getCard","cards","map","oldCard","handleCardDelete","deleteCard","filter","currentCard","handleCardClick","selectedCard","handleAddPlace","placeName","placeImage","setCard","newCard","isInfoTooltipOpen","openConfirmDeletePopup","handleLogin","loggedIn","resetLoggedIn","handleEmail","userEmail","tokenCheck","jwt","localStorage","getItem","getContent","res","data","email","history","push","handleRegisterSubmit","userPassword","register","openTooltipSuccess","openTooltipFail","handleLoginSubmit","authorize","undefined","token","setItem","isSuccess","infoTooltipButtonName","infoTooltipMessage","handleConfirmRegister","bind","componentDidMount","getUserInfo","getCards","getCardsArray","document","addEventListener","componentWillUnmount","removeEventListener","render"],"mappings":"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","sourcesContent":["import { Component } from 'react';\nimport { Route, Switch, Redirect, withRouter } from 'react-router-dom';\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\nimport api from '../utils/Api';\nimport Header from './Header';\nimport Main from './Main';\nimport Footer from './Footer';\nimport EditProfilePopup from './EditProfilePopup';\nimport EditAvatarPopup from './EditAvatarPopup';\nimport AddPlacePopup from './AddPlacePopup';\nimport ImagePopup from './ImagePopup';\nimport ConfirmDeletePopup from './ConfirmDeletePopup';\nimport ProtectedRoute from './ProtectedRoute';\nimport Register from './Register';\nimport Login from './Login';\nimport InfoTooltip from './InfoTooltip';\nimport * as Auth from '../utils/Auth';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      isEditProfilePopupOpen: false,\n      isAddPlacePopupOpen: false,\n      isEditAvatarPopupOpen: false,\n      isConfirmPopupOpen: false,\n      isInfoTooltipOpen: false,\n      infoTooltipButtonName: '',\n      infoTooltipMessage: '',\n      isSuccess: false,\n      userEmail: '',\n      selectedCard: {},\n      deleteCard: {},\n      cards: [],\n      currentUser: {},\n      loggedIn: false,\n    };\n\n    this.handleLogin = this.handleLogin.bind(this);\n    this.tokenCheck = this.tokenCheck.bind(this);\n  }\n\n  handleEditProfileClick = () => {\n    this.setState({ isEditProfilePopupOpen: true });\n  }\n\n  handleAddPlaceClick = () => {\n    this.setState({ isAddPlacePopupOpen: true });\n  }\n\n  handleEditAvatarClick = () => {\n    this.setState({ isEditAvatarPopupOpen: true });\n  }\n\n  handleConfirmDeleteCardClick = () => {\n    this.setState({ isConfirmPopupOpen: true });\n  }\n\n  handleEscClick = (event) => {\n    if (event.key === 'Escape') {\n      this.closeAllPopups();\n    }\n  }\n\n  handleOutsideClick = (event) => {\n    if (event.target.classList.contains('popup')) {\n      this.closeAllPopups();\n    }\n  }\n\n  handleUpdateUser = (userName, userDescription) => {\n    api.setUserInfo(userName, userDescription)\n      .then(userData => {\n        this.setState({ currentUser: userData });\n        this.closeAllPopups();\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }\n\n  handleUpdateAvatar = (userAvatar) => {\n    api.setAvatar(userAvatar)\n      .then(userData => {\n        this.setState({ currentUser: userData });\n        this.closeAllPopups();\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }\n\n  handleCardLike = (card) => {\n    const isLiked = card.likes.some(like => like._id === this.state.currentUser._id);\n    api.changeLikeCardStatus(card._id, isLiked)\n      .then(getCard => {\n        this.setState({ cards: this.state.cards.map(oldCard => oldCard._id === getCard._id ? getCard : oldCard) });\n      })\n      .catch(err => {\n        console.log(err);\n      });\n  }\n\n  handleCardDelete = () => {\n    api.deleteCard(this.state.deleteCard._id)\n      .then(() => {\n        this.setState({\n          cards: this.state.cards.filter(currentCard => currentCard._id !== this.state.deleteCard._id),\n          isConfirmPopupOpen: false\n        }); \n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }\n\n  handleCardClick = (card) => {\n    this.setState({ selectedCard: card });\n  }\n\n  handleAddPlace = (placeName, placeImage) => {\n    api.setCard(placeName, placeImage)\n    .then(newCard => {\n      this.setState({ cards: [newCard, ...this.state.cards] });\n      this.closeAllPopups();\n    })\n    .catch((err) => {\n      console.log(err);\n    });\n  }\n\n  componentDidMount() {\n    api.getUserInfo()\n      .then(userData => {\n        this.setState({ currentUser: userData });\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n\n      api.getCards()\n      .then(getCardsArray => {\n        this.setState({ cards: getCardsArray });\n      })\n      .catch(err => {\n        console.log(err);\n      });\n\n    this.tokenCheck();\n\n    document.addEventListener(\"keydown\", this.handleEscClick);\n    document.addEventListener(\"click\", this.handleOutsideClick);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener(\"keydown\", this.handleEscClick);\n    document.addEventListener(\"click\", this.handleOutsideClick);\n  }\n\n  closeAllPopups = () => {\n    this.setState({\n      isEditProfilePopupOpen: false,\n      isAddPlacePopupOpen: false,\n      isEditAvatarPopupOpen: false,\n      isConfirmPopupOpen: false,\n      isInfoTooltipOpen: false,\n      selectedCard: {}\n    });\n  }\n\n  openConfirmDeletePopup = (card) => {\n    this.setState({\n      deleteCard: card,\n      isConfirmPopupOpen: true\n    });\n  }\n\n  handleLogin = () => {\n    this.setState({\n      loggedIn: true\n    });\n  }\n\n  resetLoggedIn = () => {\n    this.setState({\n      loggedIn: false\n    })\n  }\n\n  handleEmail = (userEmail) => {\n    this.setState({\n      userEmail: userEmail\n    });\n  }\n\n  tokenCheck = () => {\n    const jwt = localStorage.getItem('jwt');\n    if (jwt) {\n      Auth.getContent(jwt)\n        .then((res) => {\n          if (res) {\n            this.setState({\n              loggedIn: true,\n              userEmail: res.data.email\n            }, () => {\n              this.props.history.push(\"/main\");\n            });\n          }\n        })\n        .catch((err) => {\n          console.log(err);\n        })\n    }\n  }\n\n  handleRegisterSubmit = (userEmail, userPassword) => {\n    Auth.register(userEmail, userPassword)\n      .then((res) => {\n        if(res) {\n          this.openTooltipSuccess();\n        } else {\n          this.openTooltipFail();\n        }\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }\n\n  handleLoginSubmit = (userEmail, userPassword) => {\n    Auth.authorize(userEmail, userPassword)\n      .then((data) => {\n        if (data !== undefined && data.token) {\n          localStorage.setItem('jwt', data.token);\n          this.setState({\n            loggedIn: true,\n            userEmail: userEmail\n          });\n          this.props.history.push(\"/main\");\n        } else {\n            this.props.history.push(\"/signin\");\n          }\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }\n\n  openTooltipSuccess = () => {\n    this.setState({\n      isSuccess: true,\n      loggedIn: true,\n      isInfoTooltipOpen: true,\n      infoTooltipButtonName: 'success',\n      infoTooltipMessage: 'Вы успешно зарегистрировались!'\n    });\n  }\n\n  openTooltipFail = () => {\n    this.setState({\n      isSuccess: false,\n      isInfoTooltipOpen: true,\n      infoTooltipButtonName: 'fail',\n      infoTooltipMessage: 'Что-то пошло не так! Попробуйте ещё раз.'\n    });\n  }\n\n  handleConfirmRegister = () => {\n    this.closeAllPopups();\n    if(this.state.isSuccess) {\n      this.props.history.push(\"/main\");\n    } \n  }\n\n  render() {\n    return (\n      <div className=\"page\">\n        <div className=\"container\">\n\n          <CurrentUserContext.Provider value={this.state.currentUser}>\n\n            <Header userEmail={this.state.userEmail} resetLoggedIn={this.resetLoggedIn} />\n\n            <Switch>\n\n              <ProtectedRoute\n                exact path=\"/main\"\n                loggedIn={this.state.loggedIn}\n                cards={this.state.cards}\n                onEditProfile={this.handleEditProfileClick}\n                onAddPlace={this.handleAddPlaceClick}\n                onEditAvatar={this.handleEditAvatarClick}\n                onCardLike={this.handleCardLike}\n                onCardDelete={this.openConfirmDeletePopup}\n                onCardClick={this.handleCardClick}\n                component={Main}>\n              </ProtectedRoute>\n\n              <Route path=\"/signin\">\n                <Login handleLoginSubmit={this.handleLoginSubmit} />\n              </Route>\n\n              <Route path=\"/signup\">\n                <Register handleRegisterSubmit={this.handleRegisterSubmit} />\n              </Route>\n\n              <Route>\n                {this.state.loggedIn ? <Redirect to=\"/main\" /> : <Redirect to=\"/signin\" />}\n              </Route>\n\n            </Switch>\n\n            {this.state.loggedIn && <Footer />}\n            \n            <EditProfilePopup\n              isOpen={this.state.isEditProfilePopupOpen}\n              onUpdateUser={this.handleUpdateUser}\n              onClose={this.closeAllPopups}\n            />\n\n            <EditAvatarPopup\n              isOpen={this.state.isEditAvatarPopupOpen}\n              onUpdateAvatar={this.handleUpdateAvatar}\n              onClose={this.closeAllPopups}\n            />\n\n            <AddPlacePopup\n              isOpen={this.state.isAddPlacePopupOpen}\n              onAddPlace={this.handleAddPlace}\n              onClose={this.closeAllPopups}\n            />\n\n            <ConfirmDeletePopup\n              isOpen={this.state.isConfirmPopupOpen}\n              onConfirmDeleteCard={this.handleCardDelete}\n              onClose={this.closeAllPopups}\n            />\n\n            <ImagePopup\n              card={this.state.selectedCard}\n              onClose={this.closeAllPopups}\n            />\n\n            <InfoTooltip\n              isOpen={this.state.isInfoTooltipOpen}\n              message={this.state.infoTooltipMessage}\n              buttonName={this.state.infoTooltipButtonName}\n              onConfirm={this.handleConfirmRegister}\n            />\n            \n          </CurrentUserContext.Provider>\n          \n        </div>\n      </div>\n    );\n  } \n}\n\nexport default withRouter(App);\n\n"]},"metadata":{},"sourceType":"module"}