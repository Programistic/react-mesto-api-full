{"ast":null,"code":"import _classCallCheck from\"/home/maksim/dev/mesto-react/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";import _createClass from\"/home/maksim/dev/mesto-react/node_modules/@babel/runtime/helpers/esm/createClass.js\";var cohortID='cohort-39';var token='fed91f6d-1f71-4682-bc63-ccd602fc60c4';var cardURL=\"https://mesto.nomoreparties.co/v1/\".concat(cohortID,\"/cards\");var userURL=\"https://mesto.nomoreparties.co/v1/\".concat(cohortID,\"/users/me\");var avatarURL=\"https://mesto.nomoreparties.co/v1/\".concat(cohortID,\"/users/me/avatar\");var Api=/*#__PURE__*/function(){function Api(userURL,cardURL,avatarURL,token){_classCallCheck(this,Api);this._userURL=userURL;this._cardURL=cardURL;this._avatarURL=avatarURL;this._token=token;}_createClass(Api,[{key:\"getProfile\",value:function getProfile(){var _this=this;return fetch(this._userURL,{headers:{authorization:this._token}}).then(function(res){return _this._getResponseData(res);});}},{key:\"getCards\",value:function getCards(){var _this2=this;return fetch(this._cardURL,{headers:{authorization:this._token}}).then(function(res){return _this2._getResponseData(res);});}},{key:\"setUserInfo\",value:function setUserInfo(userData){var _this3=this;return fetch(this._userURL,{method:'PATCH',headers:{authorization:this._token,'Content-Type':'application/json'},body:JSON.stringify({name:userData['user-name'],about:userData['user-info']})}).then(function(res){return _this3._getResponseData(res);});}},{key:\"setAvatar\",value:function setAvatar(avatarData){var _this4=this;return fetch(this._avatarURL,{method:'PATCH',headers:{authorization:this._token,'Content-Type':'application/json'},body:JSON.stringify({avatar:avatarData['avatar-image']})}).then(function(res){return _this4._getResponseData(res);});}},{key:\"setCard\",value:function setCard(cardData){var _this5=this;return fetch(this._cardURL,{method:'POST',headers:{authorization:this._token,'Content-Type':'application/json'},body:JSON.stringify({name:cardData['place-name'],link:cardData['place-image']})}).then(function(res){return _this5._getResponseData(res);});}},{key:\"deleteCard\",value:function deleteCard(cardID){var _this6=this;return fetch(this._cardURL+\"/\".concat(cardID),{method:'DELETE',headers:{authorization:this._token}}).then(function(res){return _this6._getResponseData(res);});}},{key:\"addLike\",value:function addLike(cardID){var _this7=this;return fetch(this._cardURL+\"/\".concat(cardID,\"/likes\"),{method:'PUT',headers:{authorization:this._token,'Content-Type':'application/json'}}).then(function(res){return _this7._getResponseData(res);});}},{key:\"deleteLike\",value:function deleteLike(cardID){var _this8=this;return fetch(this._cardURL+\"/\".concat(cardID,\"/likes\"),{method:'DELETE',headers:{authorization:this._token,'Content-Type':'application/json'}}).then(function(res){return _this8._getResponseData(res);});}},{key:\"_getResponseData\",value:function _getResponseData(res){return res.ok?res.json():Promise.reject(\"Error \".concat(res.status));}}]);return Api;}();var api=new Api(userURL,cardURL,avatarURL,token);export default api;","map":{"version":3,"sources":["/home/maksim/dev/mesto-react/src/utils/Api.js"],"names":["cohortID","token","cardURL","userURL","avatarURL","Api","_userURL","_cardURL","_avatarURL","_token","fetch","headers","authorization","then","res","_getResponseData","userData","method","body","JSON","stringify","name","about","avatarData","avatar","cardData","link","cardID","ok","json","Promise","reject","status","api"],"mappings":"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","sourcesContent":["const cohortID = 'cohort-39';\nconst token = 'fed91f6d-1f71-4682-bc63-ccd602fc60c4';\nconst cardURL = `https://mesto.nomoreparties.co/v1/${cohortID}/cards`;\nconst userURL = `https://mesto.nomoreparties.co/v1/${cohortID}/users/me`;\nconst avatarURL =`https://mesto.nomoreparties.co/v1/${cohortID}/users/me/avatar`;\n\nclass Api {\n  constructor(userURL, cardURL, avatarURL, token) {\n    this._userURL = userURL;\n    this._cardURL = cardURL;\n    this._avatarURL = avatarURL;\n    this._token = token;\n  }\n\n  getProfile() {\n    return fetch(this._userURL, {\n      headers: {\n        authorization: this._token\n      }\n    })\n      .then(res => this._getResponseData(res));\n  }\n\n  getCards() {\n    return fetch(this._cardURL, {\n      headers: {\n        authorization: this._token\n      }\n    })\n      .then(res => this._getResponseData(res))\n  }\n\n  setUserInfo(userData) {\n    return fetch(this._userURL, {\n      method: 'PATCH',\n      headers: {\n        authorization: this._token,\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        name: userData['user-name'],\n        about: userData['user-info']\n      })\n    })\n      .then(res => this._getResponseData(res))\n  }\n\n  setAvatar(avatarData) {\n    return fetch(this._avatarURL, {\n      method: 'PATCH',\n      headers: {\n        authorization: this._token,\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        avatar: avatarData['avatar-image']\n      })\n    })\n      .then(res => this._getResponseData(res))\n  }\n\n  setCard(cardData) {\n    return fetch(this._cardURL, {\n      method: 'POST',\n      headers: {\n        authorization: this._token,\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        name: cardData['place-name'],\n        link: cardData['place-image']\n      })\n    })\n      .then(res => this._getResponseData(res))\n  }\n\n  deleteCard(cardID) {\n    return fetch(this._cardURL + `/${cardID}`, {\n      method: 'DELETE',\n      headers: {\n        authorization: this._token\n      }\n    })\n      .then(res => this._getResponseData(res));\n  }\n\n  addLike(cardID) {\n    return fetch(this._cardURL + `/${cardID}/likes`, {\n      method: 'PUT',\n      headers: {\n        authorization: this._token,\n        'Content-Type': 'application/json'\n      }\n    })\n      .then(res => this._getResponseData(res));\n  }\n\n  deleteLike(cardID) {\n    return fetch(this._cardURL + `/${cardID}/likes`, {\n      method: 'DELETE',\n      headers: {\n        authorization: this._token,\n        'Content-Type': 'application/json'\n      }\n    })\n      .then(res => this._getResponseData(res));\n  }\n\n  _getResponseData(res) {\n    return res.ok ? res.json() : Promise.reject(`Error ${res.status}`)\n  }\n}\n\nconst api = new Api(userURL, cardURL, avatarURL, token);\n\nexport default api;\n"]},"metadata":{},"sourceType":"module"}