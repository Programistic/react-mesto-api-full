{"ast":null,"code":"export const BASE_URL = 'https://auth.nomoreparties.co';\nexport const register = (email, password) => {\n  return fetch(`${BASE_URL}/signup`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      email,\n      password\n    })\n  }).then(response => {\n    try {\n      if (response.status === 200) {\n        return response.json();\n      }\n    } catch (e) {\n      return e;\n    }\n  }).then(res => {\n    return res;\n  }).catch(err => console.log(err));\n};\n\nconst getResponseData = res => {\n  return res.ok ? res.json() : Promise.reject(`Error ${res.status}`);\n};","map":{"version":3,"sources":["/home/maksim/dev/mesto-react-auth/src/components/Auth.js"],"names":["BASE_URL","register","email","password","fetch","method","headers","body","JSON","stringify","then","response","status","json","e","res","catch","err","console","log","getResponseData","ok","Promise","reject"],"mappings":"AAAA,OAAO,MAAMA,QAAQ,GAAG,+BAAjB;AAEP,OAAO,MAAMC,QAAQ,GAAG,CAACC,KAAD,EAAQC,QAAR,KAAqB;AAC3C,SAAOC,KAAK,CAAE,GAAEJ,QAAS,SAAb,EAAuB;AACjCK,IAAAA,MAAM,EAAE,MADyB;AAEjCC,IAAAA,OAAO,EAAE;AACP,sBAAgB;AADT,KAFwB;AAKjCC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAACP,MAAAA,KAAD;AAAQC,MAAAA;AAAR,KAAf;AAL2B,GAAvB,CAAL,CAOJO,IAPI,CAOEC,QAAD,IAAc;AAClB,QAAI;AACF,UAAIA,QAAQ,CAACC,MAAT,KAAoB,GAAxB,EAA4B;AAC1B,eAAOD,QAAQ,CAACE,IAAT,EAAP;AACD;AACF,KAJD,CAIE,OAAMC,CAAN,EAAQ;AACN,aAAQA,CAAR;AACH;AACF,GAfI,EAgBJJ,IAhBI,CAgBEK,GAAD,IAAS;AACb,WAAOA,GAAP;AACD,GAlBI,EAmBJC,KAnBI,CAmBGC,GAAD,IAASC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAnBX,CAAP;AAoBD,CArBM;;AAuBP,MAAMG,eAAe,GAAIL,GAAD,IAAS;AAC/B,SAAOA,GAAG,CAACM,EAAJ,GAASN,GAAG,CAACF,IAAJ,EAAT,GAAsBS,OAAO,CAACC,MAAR,CAAgB,SAAQR,GAAG,CAACH,MAAO,EAAnC,CAA7B;AACD,CAFD","sourcesContent":["export const BASE_URL = 'https://auth.nomoreparties.co';\n\nexport const register = (email, password) => {\n  return fetch(`${BASE_URL}/signup`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({email, password})\n  })\n    .then((response) => {\n      try {\n        if (response.status === 200){\n          return response.json();\n        }\n      } catch(e){\n          return (e)\n      }\n    })\n    .then((res) => {\n      return res;\n    })\n    .catch((err) => console.log(err));\n};\n\nconst getResponseData = (res) => {\n  return res.ok ? res.json() : Promise.reject(`Error ${res.status}`)\n}"]},"metadata":{},"sourceType":"module"}