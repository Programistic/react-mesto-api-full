{"ast":null,"code":"var _jsxFileName = \"/home/maksim/dev/mesto-react-auth/src/components/App.js\";\nimport { Component } from 'react';\nimport { Route, Switch, Redirect, withRouter } from 'react-router-dom';\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\nimport api from '../utils/Api';\nimport Header from './Header';\nimport Main from './Main';\nimport Footer from './Footer';\nimport EditProfilePopup from './EditProfilePopup';\nimport EditAvatarPopup from './EditAvatarPopup';\nimport AddPlacePopup from './AddPlacePopup';\nimport ImagePopup from './ImagePopup';\nimport ConfirmDeletePopup from './ConfirmDeletePopup';\nimport ProtectedRoute from './ProtectedRoute';\nimport Register from './Register';\nimport Login from './Login';\nimport InfoTooltip from './InfoTooltip';\nimport * as Auth from './Auth';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleLogin = () => {\n      this.setState({\n        loggedIn: true\n      });\n    };\n\n    this.tokenCheck = () => {\n      if (localStorage.getItem('jwt')) {\n        const jwt = localStorage.getItem('jwt');\n\n        if (jwt) {\n          Auth.getContent(jwt).then(res => {\n            if (res) {\n              this.setState({\n                loggedIn: true,\n                userEmail: res.data.email,\n                menuHeading: 'Выйти'\n              }, () => {\n                this.props.history.push(\"/main\");\n              });\n            }\n          });\n        }\n      }\n    };\n\n    this.handleEditProfileClick = () => {\n      this.setState({\n        isEditProfilePopupOpen: true\n      });\n    };\n\n    this.handleAddPlaceClick = () => {\n      this.setState({\n        isAddPlacePopupOpen: true\n      });\n    };\n\n    this.handleEditAvatarClick = () => {\n      this.setState({\n        isEditAvatarPopupOpen: true\n      });\n    };\n\n    this.handleConfirmDeleteCardClick = () => {\n      this.setState({\n        isConfirmPopupOpen: true\n      });\n    };\n\n    this.handleEscClick = event => {\n      if (event.key === 'Escape') {\n        this.closeAllPopups();\n      }\n    };\n\n    this.handleOutsideClick = event => {\n      if (event.target.classList.contains('popup')) {\n        this.closeAllPopups();\n      }\n    };\n\n    this.handleUpdateUser = (userName, userDescription) => {\n      api.setUserInfo(userName, userDescription).then(userData => {\n        this.setState({\n          currentUser: userData\n        });\n        this.closeAllPopups();\n      }).catch(err => {\n        console.log(err);\n      });\n    };\n\n    this.handleUpdateAvatar = userAvatar => {\n      api.setAvatar(userAvatar).then(userData => {\n        this.setState({\n          currentUser: userData\n        });\n        this.closeAllPopups();\n      }).catch(err => {\n        console.log(err);\n      });\n    };\n\n    this.handleCardLike = card => {\n      const isLiked = card.likes.some(like => like._id === this.state.currentUser._id);\n      api.changeLikeCardStatus(card._id, isLiked).then(getCard => {\n        this.setState({\n          cards: this.state.cards.map(oldCard => oldCard._id === getCard._id ? getCard : oldCard)\n        });\n      }).catch(err => {\n        console.log(err);\n      });\n    };\n\n    this.handleCardDelete = () => {\n      api.deleteCard(this.state.deleteCard._id).then(() => {\n        this.setState({\n          cards: this.state.cards.filter(currentCard => currentCard._id !== this.state.deleteCard._id),\n          isConfirmPopupOpen: false\n        });\n      }).catch(err => {\n        console.log(err);\n      });\n    };\n\n    this.handleCardClick = card => {\n      this.setState({\n        selectedCard: card\n      });\n    };\n\n    this.handleAddPlace = (placeName, placeImage) => {\n      api.setCard(placeName, placeImage).then(newCard => {\n        this.setState({\n          cards: [newCard, ...this.state.cards]\n        });\n        this.closeAllPopups();\n      }).catch(err => {\n        console.log(err);\n      });\n    };\n\n    this.closeAllPopups = () => {\n      this.setState({\n        isEditProfilePopupOpen: false,\n        isAddPlacePopupOpen: false,\n        isEditAvatarPopupOpen: false,\n        isConfirmPopupOpen: false,\n        isInfoTooltipOpen: false,\n        selectedCard: {}\n      });\n    };\n\n    this.openConfirmDeletePopup = card => {\n      this.setState({\n        deleteCard: card,\n        isConfirmPopupOpen: true\n      });\n    };\n\n    this.openTooltipSuccess = () => {\n      this.setState({\n        isSuccess: true,\n        isInfoTooltipOpen: true,\n        infoTooltipButtonName: 'success',\n        infoTooltipMessage: 'Вы успешно зарегистрировались!'\n      });\n    };\n\n    this.openTooltipFail = () => {\n      this.setState({\n        isSuccess: false,\n        isInfoTooltipOpen: true,\n        infoTooltipButtonName: 'fail',\n        infoTooltipMessage: 'Что-то пошло не так! Попробуйте ещё раз.'\n      });\n    };\n\n    this.handleConfirmRegister = () => {\n      this.closeAllPopups();\n\n      if (this.state.isSuccess) {\n        this.setState({\n          menuHeading: 'Регистрация'\n        });\n        this.props.history.push('/signin');\n      }\n    };\n\n    this.state = {\n      isEditProfilePopupOpen: false,\n      isAddPlacePopupOpen: false,\n      isEditAvatarPopupOpen: false,\n      isConfirmPopupOpen: false,\n      isInfoTooltipOpen: false,\n      infoTooltipButtonName: '',\n      infoTooltipMessage: '',\n      isSuccess: false,\n      userEmail: '',\n      selectedCard: {},\n      deleteCard: {},\n      cards: [],\n      currentUser: {},\n      loggedIn: false,\n      menuHeading: ''\n    };\n    this.handleLogin = this.handleLogin.bind(this);\n    this.tokenCheck = this.tokenCheck.bind(this);\n  }\n\n  componentDidMount() {\n    api.getUserInfo().then(userData => {\n      this.setState({\n        currentUser: userData\n      });\n    }).catch(err => {\n      console.log(err);\n    });\n    api.getCards().then(getCardsArray => {\n      this.setState({\n        cards: getCardsArray\n      });\n    }).catch(err => {\n      console.log(err);\n    });\n    this.tokenCheck();\n    document.addEventListener(\"keydown\", this.handleEscClick);\n    document.addEventListener(\"click\", this.handleOutsideClick);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener(\"keydown\", this.handleEscClick);\n    document.addEventListener(\"click\", this.handleOutsideClick);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"page\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: /*#__PURE__*/_jsxDEV(CurrentUserContext.Provider, {\n          value: this.state.currentUser,\n          children: [/*#__PURE__*/_jsxDEV(Header, {\n            loggedIn: this.state.loggedIn,\n            userEmail: this.state.userEmail,\n            buttonName: this.state.menuHeading\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 239,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Switch, {\n            children: [/*#__PURE__*/_jsxDEV(ProtectedRoute, {\n              path: \"/main\",\n              loggedIn: this.state.loggedIn,\n              cards: this.state.cards,\n              onEditProfile: this.handleEditProfileClick,\n              onAddPlace: this.handleAddPlaceClick,\n              onEditAvatar: this.handleEditAvatarClick,\n              onCardLike: this.handleCardLike,\n              onCardDelete: this.openConfirmDeletePopup,\n              onCardClick: this.handleCardClick,\n              component: Main\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 243,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Route, {\n              path: \"/signin\",\n              children: [this.setState({\n                menuHeading: 'Регистрация'\n              }), /*#__PURE__*/_jsxDEV(Login, {\n                handleLogin: this.handleLogin\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 258,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 256,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Route, {\n              path: \"/signup\",\n              children: [this.setState({\n                menuHeading: 'Регистрация'\n              }), /*#__PURE__*/_jsxDEV(Register, {\n                tooltipSuccess: this.openTooltipSuccess,\n                tooltipFail: this.openTooltipFail\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 263,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 261,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Route, {\n              children: this.state.loggedIn ? /*#__PURE__*/_jsxDEV(Redirect, {\n                to: \"/signin\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 267,\n                columnNumber: 40\n              }, this) : /*#__PURE__*/_jsxDEV(Redirect, {\n                to: \"/signup\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 267,\n                columnNumber: 68\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 266,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 241,\n            columnNumber: 13\n          }, this), this.state.loggedIn && /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 272,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(EditProfilePopup, {\n            isOpen: this.state.isEditProfilePopupOpen,\n            onUpdateUser: this.handleUpdateUser,\n            onClose: this.closeAllPopups\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 275,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(EditAvatarPopup, {\n            isOpen: this.state.isEditAvatarPopupOpen,\n            onUpdateAvatar: this.handleUpdateAvatar,\n            onClose: this.closeAllPopups\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 281,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(AddPlacePopup, {\n            isOpen: this.state.isAddPlacePopupOpen,\n            onAddPlace: this.handleAddPlace,\n            onClose: this.closeAllPopups\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 287,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ConfirmDeletePopup, {\n            isOpen: this.state.isConfirmPopupOpen,\n            onConfirmDeleteCard: this.handleCardDelete,\n            onClose: this.closeAllPopups\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 293,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ImagePopup, {\n            card: this.state.selectedCard,\n            onClose: this.closeAllPopups\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 299,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(InfoTooltip, {\n            isOpen: this.state.isInfoTooltipOpen,\n            message: this.state.infoTooltipMessage,\n            buttonName: this.state.infoTooltipButtonName,\n            onConfirm: this.handleConfirmRegister,\n            onClose: this.closeAllPopups\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 304,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default _c = withRouter(App);\n\nvar _c;\n\n$RefreshReg$(_c, \"%default%\");","map":{"version":3,"sources":["/home/maksim/dev/mesto-react-auth/src/components/App.js"],"names":["Component","Route","Switch","Redirect","withRouter","CurrentUserContext","api","Header","Main","Footer","EditProfilePopup","EditAvatarPopup","AddPlacePopup","ImagePopup","ConfirmDeletePopup","ProtectedRoute","Register","Login","InfoTooltip","Auth","App","constructor","props","handleLogin","setState","loggedIn","tokenCheck","localStorage","getItem","jwt","getContent","then","res","userEmail","data","email","menuHeading","history","push","handleEditProfileClick","isEditProfilePopupOpen","handleAddPlaceClick","isAddPlacePopupOpen","handleEditAvatarClick","isEditAvatarPopupOpen","handleConfirmDeleteCardClick","isConfirmPopupOpen","handleEscClick","event","key","closeAllPopups","handleOutsideClick","target","classList","contains","handleUpdateUser","userName","userDescription","setUserInfo","userData","currentUser","catch","err","console","log","handleUpdateAvatar","userAvatar","setAvatar","handleCardLike","card","isLiked","likes","some","like","_id","state","changeLikeCardStatus","getCard","cards","map","oldCard","handleCardDelete","deleteCard","filter","currentCard","handleCardClick","selectedCard","handleAddPlace","placeName","placeImage","setCard","newCard","isInfoTooltipOpen","openConfirmDeletePopup","openTooltipSuccess","isSuccess","infoTooltipButtonName","infoTooltipMessage","openTooltipFail","handleConfirmRegister","bind","componentDidMount","getUserInfo","getCards","getCardsArray","document","addEventListener","componentWillUnmount","removeEventListener","render"],"mappings":"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","sourcesContent":["import { Component } from 'react';\nimport { Route, Switch, Redirect, withRouter } from 'react-router-dom';\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\nimport api from '../utils/Api';\nimport Header from './Header';\nimport Main from './Main';\nimport Footer from './Footer';\nimport EditProfilePopup from './EditProfilePopup';\nimport EditAvatarPopup from './EditAvatarPopup';\nimport AddPlacePopup from './AddPlacePopup';\nimport ImagePopup from './ImagePopup';\nimport ConfirmDeletePopup from './ConfirmDeletePopup';\nimport ProtectedRoute from './ProtectedRoute';\nimport Register from './Register';\nimport Login from './Login';\nimport InfoTooltip from './InfoTooltip';\nimport * as Auth from './Auth';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      isEditProfilePopupOpen: false,\n      isAddPlacePopupOpen: false,\n      isEditAvatarPopupOpen: false,\n      isConfirmPopupOpen: false,\n      isInfoTooltipOpen: false,\n      infoTooltipButtonName: '',\n      infoTooltipMessage: '',\n      isSuccess: false,\n      userEmail: '',\n      selectedCard: {},\n      deleteCard: {},\n      cards: [],\n      currentUser: {},\n      loggedIn: false,\n      menuHeading: ''\n    };\n\n    this.handleLogin = this.handleLogin.bind(this);\n    this.tokenCheck = this.tokenCheck.bind(this);\n  }\n\n  handleLogin = () => {\n    this.setState({ loggedIn: true });\n  }\n\n  tokenCheck = () => {\n    if (localStorage.getItem('jwt')) {\n      const jwt = localStorage.getItem('jwt');\n      if (jwt) {\n        Auth.getContent(jwt).then((res) => {\n          if (res) {\n            this.setState({\n              loggedIn: true,\n              userEmail: res.data.email,\n              menuHeading: 'Выйти'\n            }, () => {\n              this.props.history.push(\"/main\");\n            });\n          }\n        });\n      }\n    }\n  }\n\n  handleEditProfileClick = () => {\n    this.setState({ isEditProfilePopupOpen: true });\n  }\n\n  handleAddPlaceClick = () => {\n    this.setState({ isAddPlacePopupOpen: true });\n  }\n\n  handleEditAvatarClick = () => {\n    this.setState({ isEditAvatarPopupOpen: true });\n  }\n\n  handleConfirmDeleteCardClick = () => {\n    this.setState({ isConfirmPopupOpen: true });\n  }\n\n  handleEscClick = (event) => {\n    if (event.key === 'Escape') {\n      this.closeAllPopups();\n    }\n  }\n\n  handleOutsideClick = (event) => {\n    if (event.target.classList.contains('popup')) {\n      this.closeAllPopups();\n    }\n  }\n\n  handleUpdateUser = (userName, userDescription) => {\n    api.setUserInfo(userName, userDescription)\n      .then(userData => {\n        this.setState({ currentUser: userData });\n        this.closeAllPopups();\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }\n\n  handleUpdateAvatar = (userAvatar) => {\n    api.setAvatar(userAvatar)\n      .then(userData => {\n        this.setState({ currentUser: userData });\n        this.closeAllPopups();\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }\n\n  handleCardLike = (card) => {\n\n    const isLiked = card.likes.some(like => like._id === this.state.currentUser._id);\n\n    api.changeLikeCardStatus(card._id, isLiked)\n      .then(getCard => {\n        this.setState({ cards: this.state.cards.map(oldCard => oldCard._id === getCard._id ? getCard : oldCard) });\n      })\n      .catch(err => {\n        console.log(err);\n      });\n  }\n\n  handleCardDelete = () => {\n    api.deleteCard(this.state.deleteCard._id)\n      .then(() => {\n        this.setState(\n          {\n            cards: this.state.cards.filter(currentCard => currentCard._id !== this.state.deleteCard._id),\n            isConfirmPopupOpen: false\n          }\n        ); \n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }\n\n  handleCardClick = (card) => {\n    this.setState({ selectedCard: card });\n  }\n\n  handleAddPlace = (placeName, placeImage) => {\n    api.setCard(placeName, placeImage)\n    .then(newCard => {\n      this.setState({ cards: [newCard, ...this.state.cards] });\n      this.closeAllPopups();\n    })\n    .catch((err) => {\n      console.log(err);\n    });\n  }\n\n  componentDidMount() {\n    api.getUserInfo()\n      .then(userData => {\n        this.setState({ currentUser: userData });\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n\n      api.getCards()\n      .then(getCardsArray => {\n        this.setState({ cards: getCardsArray });\n      })\n      .catch(err => {\n        console.log(err);\n      });\n\n    this.tokenCheck();\n\n    document.addEventListener(\"keydown\", this.handleEscClick);\n    document.addEventListener(\"click\", this.handleOutsideClick);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener(\"keydown\", this.handleEscClick);\n    document.addEventListener(\"click\", this.handleOutsideClick);\n  }\n\n  closeAllPopups = () => {\n    this.setState(\n      {\n        isEditProfilePopupOpen: false,\n        isAddPlacePopupOpen: false,\n        isEditAvatarPopupOpen: false,\n        isConfirmPopupOpen: false,\n        isInfoTooltipOpen: false,\n        selectedCard: {}\n      }\n    );\n  }\n\n  openConfirmDeletePopup = (card) => {\n    this.setState({ deleteCard: card, isConfirmPopupOpen: true });\n  }\n\n  openTooltipSuccess = () => {\n    this.setState({\n      isSuccess: true,\n      isInfoTooltipOpen: true,\n      infoTooltipButtonName: 'success',\n      infoTooltipMessage: 'Вы успешно зарегистрировались!'\n    });\n  }\n\n  openTooltipFail = () => {\n    this.setState({\n      isSuccess: false,\n      isInfoTooltipOpen: true,\n      infoTooltipButtonName: 'fail',\n      infoTooltipMessage: 'Что-то пошло не так! Попробуйте ещё раз.'\n    });\n  }\n\n  handleConfirmRegister = () => {\n    this.closeAllPopups();\n    if(this.state.isSuccess) {\n      this.setState({menuHeading: 'Регистрация'});\n      this.props.history.push('/signin');\n    } \n  }\n\n  render() {\n    return (\n      <div className=\"page\">\n        <div className=\"container\">\n\n          <CurrentUserContext.Provider value={this.state.currentUser}>\n\n            <Header loggedIn={this.state.loggedIn} userEmail={this.state.userEmail} buttonName={this.state.menuHeading} />\n\n            <Switch>\n\n              <ProtectedRoute\n                path=\"/main\"\n                loggedIn={this.state.loggedIn}\n                cards={this.state.cards}\n                onEditProfile={this.handleEditProfileClick}\n                onAddPlace={this.handleAddPlaceClick}\n                onEditAvatar={this.handleEditAvatarClick}\n                onCardLike={this.handleCardLike}\n                onCardDelete={this.openConfirmDeletePopup}\n                onCardClick={this.handleCardClick}\n                component={Main}>\n              </ProtectedRoute>\n\n              <Route path=\"/signin\">\n                {this.setState({menuHeading: 'Регистрация'})}\n                <Login handleLogin={this.handleLogin} />\n              </Route>\n\n              <Route path=\"/signup\">\n                {this.setState({menuHeading: 'Регистрация'})}\n                <Register tooltipSuccess={this.openTooltipSuccess} tooltipFail={this.openTooltipFail} />\n              </Route>\n\n              <Route>\n                {this.state.loggedIn ? <Redirect to=\"/signin\" /> : <Redirect to=\"/signup\" />}\n              </Route>\n\n            </Switch>\n\n            {this.state.loggedIn && <Footer />}\n            \n\n            <EditProfilePopup\n              isOpen={this.state.isEditProfilePopupOpen}\n              onUpdateUser={this.handleUpdateUser}\n              onClose={this.closeAllPopups}\n            />\n\n            <EditAvatarPopup\n              isOpen={this.state.isEditAvatarPopupOpen}\n              onUpdateAvatar={this.handleUpdateAvatar}\n              onClose={this.closeAllPopups}\n            />\n\n            <AddPlacePopup\n              isOpen={this.state.isAddPlacePopupOpen}\n              onAddPlace={this.handleAddPlace}\n              onClose={this.closeAllPopups}\n            />\n\n            <ConfirmDeletePopup\n              isOpen={this.state.isConfirmPopupOpen}\n              onConfirmDeleteCard={this.handleCardDelete}\n              onClose={this.closeAllPopups}\n            />\n\n            <ImagePopup\n              card={this.state.selectedCard}\n              onClose={this.closeAllPopups}\n            />\n\n            <InfoTooltip\n              isOpen={this.state.isInfoTooltipOpen}\n              message={this.state.infoTooltipMessage}\n              buttonName={this.state.infoTooltipButtonName}\n              onConfirm={this.handleConfirmRegister}\n              onClose={this.closeAllPopups}\n            />\n\n          </CurrentUserContext.Provider>\n          \n        </div>\n      </div>\n    );\n  } \n}\n\nexport default withRouter(App);\n\n"]},"metadata":{},"sourceType":"module"}