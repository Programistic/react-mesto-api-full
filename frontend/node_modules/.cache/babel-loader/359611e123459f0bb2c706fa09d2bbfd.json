{"ast":null,"code":"var _jsxFileName = \"/home/maksim/dev/mesto-react/src/components/PopupWithForm.js\";\nimport React from 'react';\nimport { CurrentUserContext } from \"../contexts/CurrentUserContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass PopupWithForm extends React.Component {\n  /* const currentUser = React.useContext(CurrentUserContext);\n    const [name, setName] = React.useState(currentUser.name);\n   const [description, setDescription] = React.useState(currentUser.about);\n    React.useEffect(() => {\n     setName(currentUser.name);\n     setDescription(currentUser.about);\n   }, [currentUser]); */\n  constructor(props) {\n    super(props);\n\n    this.handleNameChange = e => {\n      this.setState({\n        userName: e.target.value\n      });\n    };\n\n    this.handleDescriptionChange = e => {\n      this.setState({\n        userDescription: e.target.value\n      });\n    };\n\n    this.state = {\n      userName: null,\n      userDescription: null\n    };\n  }\n\n  componentDidMount() {\n    this.setState({\n      userName: this.context.name,\n      userDescription: this.context.about\n    });\n  }\n\n  render() {\n    const childrenWithProps = React.Children.map(this.props.children, (child, i) => {\n      return /*#__PURE__*/React.cloneElement(child, {\n        index: i,\n        name: this.state.r\n      });\n    });\n    const popupOpened = this.props.isOpen ? 'popup_opened' : '';\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `popup popup_role_${this.props.name} ${popupOpened}`,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"popup__container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"popup__heading\",\n          children: this.props.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          className: \"form\",\n          name: this.props.name,\n          onSubmit: this.props.onSubmit,\n          children: [childrenWithProps, /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"form__submit button\",\n            type: \"submit\",\n            \"aria-label\": this.props.buttonText,\n            children: this.props.buttonText\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"button popup__button-close\",\n        type: \"button\",\n        \"aria-label\": \"\\u0417\\u0430\\u043A\\u0440\\u044B\\u0442\\u044C\",\n        onClick: this.props.onClose\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nPopupWithForm.contextType = CurrentUserContext;\nexport default PopupWithForm;","map":{"version":3,"sources":["/home/maksim/dev/mesto-react/src/components/PopupWithForm.js"],"names":["React","CurrentUserContext","PopupWithForm","Component","constructor","props","handleNameChange","e","setState","userName","target","value","handleDescriptionChange","userDescription","state","componentDidMount","context","name","about","render","childrenWithProps","Children","map","children","child","i","cloneElement","index","r","popupOpened","isOpen","title","onSubmit","buttonText","onClose","contextType"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,kBAAT,QAAmC,gCAAnC;;;AAEA,MAAMC,aAAN,SAA4BF,KAAK,CAACG,SAAlC,CAA4C;AAE3C;AACD;AACA;AACA;AACA;AACA;AACA;AAIEC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAWnBC,gBAXmB,GAWCC,CAAD,IAAO;AACxB,WAAKC,QAAL,CAAe;AAACC,QAAAA,QAAQ,EAAEF,CAAC,CAACG,MAAF,CAASC;AAApB,OAAf;AACD,KAbkB;;AAAA,SAenBC,uBAfmB,GAeQL,CAAD,IAAO;AAC/B,WAAKC,QAAL,CAAe;AAACK,QAAAA,eAAe,EAAEN,CAAC,CAACG,MAAF,CAASC;AAA3B,OAAf;AACD,KAjBkB;;AAEjB,SAAKG,KAAL,GAAa;AAAEL,MAAAA,QAAQ,EAAE,IAAZ;AAAkBI,MAAAA,eAAe,EAAE;AAAnC,KAAb;AACD;;AAIDE,EAAAA,iBAAiB,GAAG;AAClB,SAAKP,QAAL,CAAe;AAACC,MAAAA,QAAQ,EAAE,KAAKO,OAAL,CAAaC,IAAxB;AAA8BJ,MAAAA,eAAe,EAAE,KAAKG,OAAL,CAAaE;AAA5D,KAAf;AACD;;AAUDC,EAAAA,MAAM,GAAG;AAEP,UAAMC,iBAAiB,GAAGpB,KAAK,CAACqB,QAAN,CAAeC,GAAf,CAAmB,KAAKjB,KAAL,CAAWkB,QAA9B,EAAwC,CAACC,KAAD,EAAQC,CAAR,KAAc;AAC9E,0BAAOzB,KAAK,CAAC0B,YAAN,CAAmBF,KAAnB,EAA0B;AAC/BG,QAAAA,KAAK,EAAEF,CADwB;AAE/BR,QAAAA,IAAI,EAAE,KAAKH,KAAL,CAAWc;AAFc,OAA1B,CAAP;AAID,KALyB,CAA1B;AAQA,UAAMC,WAAW,GAAG,KAAKxB,KAAL,CAAWyB,MAAX,GAAoB,cAApB,GAAqC,EAAzD;AAEA,wBACE;AAAK,MAAA,SAAS,EAAG,oBAAmB,KAAKzB,KAAL,CAAWY,IAAK,IAAGY,WAAY,EAAnE;AAAA,8BACE;AAAK,QAAA,SAAS,EAAC,kBAAf;AAAA,gCACE;AAAI,UAAA,SAAS,EAAC,gBAAd;AAAA,oBAAgC,KAAKxB,KAAL,CAAW0B;AAA3C;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAM,UAAA,SAAS,EAAC,MAAhB;AAAuB,UAAA,IAAI,EAAE,KAAK1B,KAAL,CAAWY,IAAxC;AAA8C,UAAA,QAAQ,EAAE,KAAKZ,KAAL,CAAW2B,QAAnE;AAAA,qBACGZ,iBADH,eAEE;AAAQ,YAAA,SAAS,EAAC,qBAAlB;AAAwC,YAAA,IAAI,EAAC,QAA7C;AAAsD,0BAAY,KAAKf,KAAL,CAAW4B,UAA7E;AAAA,sBAA0F,KAAK5B,KAAL,CAAW4B;AAArG;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAQE;AAAQ,QAAA,SAAS,EAAC,4BAAlB;AAA+C,QAAA,IAAI,EAAC,QAApD;AAA6D,sBAAW,4CAAxE;AAAkF,QAAA,OAAO,EAAE,KAAK5B,KAAL,CAAW6B;AAAtG;AAAA;AAAA;AAAA;AAAA,cARF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAYD;;AAvDyC;;AAAtChC,a,CAiBGiC,W,GAAclC,kB;AAyCvB,eAAeC,aAAf","sourcesContent":["import React from 'react';\nimport { CurrentUserContext } from \"../contexts/CurrentUserContext\";\n\nclass PopupWithForm extends React.Component {\n\n /* const currentUser = React.useContext(CurrentUserContext);\n\n  const [name, setName] = React.useState(currentUser.name);\n  const [description, setDescription] = React.useState(currentUser.about);\n\n  React.useEffect(() => {\n    setName(currentUser.name);\n    setDescription(currentUser.about);\n  }, [currentUser]); */\n\n  constructor(props) {\n    super(props);\n    this.state = { userName: null, userDescription: null };\n  }\n\n  static contextType = CurrentUserContext;\n\n  componentDidMount() {\n    this.setState( {userName: this.context.name, userDescription: this.context.about} )\n  }\n\n  handleNameChange = (e) => {\n    this.setState( {userName: e.target.value} );\n  }\n\n  handleDescriptionChange = (e) => {\n    this.setState( {userDescription: e.target.value} );\n  }\n  \n  render() {\n    \n    const childrenWithProps = React.Children.map(this.props.children, (child, i) => {\n      return React.cloneElement(child, {\n        index: i,\n        name: this.state.r\n      })\n    })\n      \n  \n    const popupOpened = this.props.isOpen ? 'popup_opened' : '';\n  \n    return (\n      <div className={`popup popup_role_${this.props.name} ${popupOpened}`}>\n        <div className=\"popup__container\">\n          <h2 className=\"popup__heading\">{this.props.title}</h2>\n          <form className=\"form\" name={this.props.name} onSubmit={this.props.onSubmit}>\n            {childrenWithProps}\n            <button className=\"form__submit button\" type=\"submit\" aria-label={this.props.buttonText}>{this.props.buttonText}</button>\n          </form>\n        </div>\n        <button className=\"button popup__button-close\" type=\"button\" aria-label=\"Закрыть\" onClick={this.props.onClose}></button>\n      </div>\n    );\n  }\n}\n\nexport default PopupWithForm;\n"]},"metadata":{},"sourceType":"module"}