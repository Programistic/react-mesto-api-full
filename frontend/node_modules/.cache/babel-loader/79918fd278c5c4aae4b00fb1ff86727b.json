{"ast":null,"code":"var _jsxFileName = \"/home/maksim/dev/mesto-react/src/components/PopupWithForm.js\";\nimport React from 'react';\nimport FieldsetPopupEdit from './FieldsetPopupEdit.js';\nimport FieldsetPopupCreate from './FieldsetPopupCreate.js';\nimport FieldsetPopupAvatarUpdate from './FieldsetPopupAvatarUpdate.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass PopupWithForm extends React.Component {\n  constructor() {\n    super(...arguments);\n\n    this.handleOutClick = event => {\n      console.log(event.target);\n      console.log(event.currentTarget);\n\n      if (event.target === event.currentTarget || event.target.classList.contains('popup__button-close')) {\n        {\n          this.props.onClose;\n        }\n        ;\n      }\n    };\n  }\n\n  componentDidMount() {\n    document.addEventListener(\"mousedown\", this.handleOutClick);\n  }\n\n  componentWillUnmount() {\n    document.addEventListener(\"mousedown\", this.handleOutClick);\n  }\n\n  render() {\n    const popupOpened = this.props.isOpen ? 'popup_opened' : false;\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `popup popup_role_${this.props.name} ${popupOpened}`,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"popup__container\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"popup__heading\",\n            children: this.props.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n            className: \"form\",\n            name: this.props.name,\n            children: [this.props.children === 'edit' && /*#__PURE__*/_jsxDEV(FieldsetPopupEdit, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 34,\n              columnNumber: 51\n            }, this), this.props.children === 'create' && /*#__PURE__*/_jsxDEV(FieldsetPopupCreate, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 35,\n              columnNumber: 53\n            }, this), this.props.children === 'avatar-update' && /*#__PURE__*/_jsxDEV(FieldsetPopupAvatarUpdate, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 36,\n              columnNumber: 60\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"form__submit button\",\n              type: \"submit\",\n              \"aria-label\": this.props.buttonText,\n              children: this.props.buttonText\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 37,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"button popup__button-close\",\n          type: \"button\",\n          \"aria-label\": \"\\u0417\\u0430\\u043A\\u0440\\u044B\\u0442\\u044C\",\n          onClick: this.props.onClose\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this)\n    }, void 0, false);\n  }\n\n}\n\nexport default PopupWithForm;","map":{"version":3,"sources":["/home/maksim/dev/mesto-react/src/components/PopupWithForm.js"],"names":["React","FieldsetPopupEdit","FieldsetPopupCreate","FieldsetPopupAvatarUpdate","PopupWithForm","Component","handleOutClick","event","console","log","target","currentTarget","classList","contains","props","onClose","componentDidMount","document","addEventListener","componentWillUnmount","render","popupOpened","isOpen","name","title","children","buttonText"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,iBAAP,MAA8B,wBAA9B;AACA,OAAOC,mBAAP,MAAgC,0BAAhC;AACA,OAAOC,yBAAP,MAAsC,gCAAtC;;;;AAEA,MAAMC,aAAN,SAA4BJ,KAAK,CAACK,SAAlC,CAA4C;AAAA;AAAA;;AAAA,SAE1CC,cAF0C,GAExBC,KAAD,IAAW;AAC1BC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACG,MAAlB;AACAF,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACI,aAAlB;;AACA,UAAIJ,KAAK,CAACG,MAAN,KAAiBH,KAAK,CAACI,aAAvB,IAAwCJ,KAAK,CAACG,MAAN,CAAaE,SAAb,CAAuBC,QAAvB,CAAgC,qBAAhC,CAA5C,EAAoG;AAClG;AAAC,eAAKC,KAAL,CAAWC,OAAX;AAAmB;AAAA;AACrB;AACF,KARyC;AAAA;;AAU1CC,EAAAA,iBAAiB,GAAG;AAClBC,IAAAA,QAAQ,CAACC,gBAAT,CAA0B,WAA1B,EAAuC,KAAKZ,cAA5C;AACD;;AAEDa,EAAAA,oBAAoB,GAAG;AACrBF,IAAAA,QAAQ,CAACC,gBAAT,CAA0B,WAA1B,EAAuC,KAAKZ,cAA5C;AACD;;AAEDc,EAAAA,MAAM,GAAG;AAEP,UAAMC,WAAW,GAAG,KAAKP,KAAL,CAAWQ,MAAX,GAAoB,cAApB,GAAqC,KAAzD;AAEA,wBACE;AAAA,6BACE;AAAK,QAAA,SAAS,EAAG,oBAAmB,KAAKR,KAAL,CAAWS,IAAK,IAAGF,WAAY,EAAnE;AAAA,gCACE;AAAK,UAAA,SAAS,EAAC,kBAAf;AAAA,kCACE;AAAI,YAAA,SAAS,EAAC,gBAAd;AAAA,sBAAgC,KAAKP,KAAL,CAAWU;AAA3C;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAM,YAAA,SAAS,EAAC,MAAhB;AAAuB,YAAA,IAAI,EAAE,KAAKV,KAAL,CAAWS,IAAxC;AAAA,uBACI,KAAKT,KAAL,CAAWW,QAAX,KAAwB,MAAxB,iBAAkC,QAAC,iBAAD;AAAA;AAAA;AAAA;AAAA,oBADtC,EAEI,KAAKX,KAAL,CAAWW,QAAX,KAAwB,QAAxB,iBAAoC,QAAC,mBAAD;AAAA;AAAA;AAAA;AAAA,oBAFxC,EAGI,KAAKX,KAAL,CAAWW,QAAX,KAAwB,eAAxB,iBAA2C,QAAC,yBAAD;AAAA;AAAA;AAAA;AAAA,oBAH/C,eAIE;AAAQ,cAAA,SAAS,EAAC,qBAAlB;AAAwC,cAAA,IAAI,EAAC,QAA7C;AAAsD,4BAAY,KAAKX,KAAL,CAAWY,UAA7E;AAAA,wBAA0F,KAAKZ,KAAL,CAAWY;AAArG;AAAA;AAAA;AAAA;AAAA,oBAJF;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAUE;AAAQ,UAAA,SAAS,EAAC,4BAAlB;AAA+C,UAAA,IAAI,EAAC,QAApD;AAA6D,wBAAW,4CAAxE;AAAkF,UAAA,OAAO,EAAE,KAAKZ,KAAL,CAAWC;AAAtG;AAAA;AAAA;AAAA;AAAA,gBAVF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF,qBADF;AAgBD;;AAtCyC;;AAyC5C,eAAeX,aAAf","sourcesContent":["import React from 'react';\nimport FieldsetPopupEdit from './FieldsetPopupEdit.js'\nimport FieldsetPopupCreate from './FieldsetPopupCreate.js'\nimport FieldsetPopupAvatarUpdate from './FieldsetPopupAvatarUpdate.js'\n\nclass PopupWithForm extends React.Component {\n\n  handleOutClick = (event) => {\n    console.log(event.target)\n    console.log(event.currentTarget)\n    if (event.target === event.currentTarget || event.target.classList.contains('popup__button-close')) {\n      {this.props.onClose};\n    }\n  }\n\n  componentDidMount() {\n    document.addEventListener(\"mousedown\", this.handleOutClick);\n  }\n\n  componentWillUnmount() {\n    document.addEventListener(\"mousedown\", this.handleOutClick);\n  }\n  \n  render() {\n  \n    const popupOpened = this.props.isOpen ? 'popup_opened' : false;\n  \n    return (\n      <>\n        <div className={`popup popup_role_${this.props.name} ${popupOpened}`}>\n          <div className=\"popup__container\">\n            <h2 className=\"popup__heading\">{this.props.title}</h2>\n            <form className=\"form\" name={this.props.name}>\n              { this.props.children === 'edit' && <FieldsetPopupEdit /> }\n              { this.props.children === 'create' && <FieldsetPopupCreate /> }\n              { this.props.children === 'avatar-update' && <FieldsetPopupAvatarUpdate /> }   \n              <button className=\"form__submit button\" type=\"submit\" aria-label={this.props.buttonText}>{this.props.buttonText}</button>\n            </form>\n          </div>\n          <button className=\"button popup__button-close\" type=\"button\" aria-label=\"Закрыть\" onClick={this.props.onClose}></button>\n        </div>\n      </>\n    );\n  }\n}\n\nexport default PopupWithForm;\n"]},"metadata":{},"sourceType":"module"}