{"ast":null,"code":"var _jsxFileName = \"/home/maksim/dev/mesto-react/src/components/PopupWithForm.js\";\nimport React from 'react';\nimport { CurrentUserContext } from \"../contexts/CurrentUserContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass PopupWithForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      userName: '',\n      userDescription: ''\n    };\n  }\n\n  /* componentDidMount() {\n     this.setState( {userName: this.context.name, userDescription: this.context.about} )\n     console.log(this.context.name)\n   }\n    handleNameChange = (e) => {\n     this.setState( {userName: e.target.value} );\n   }\n    handleDescriptionChange = (e) => {\n     this.setState( {userDescription: e.target.value} );\n   } */\n  render() {\n    /* const childrenWithProps = React.Children.map(this.props.children, (child, i) => {\n       return React.cloneElement(child, {\n         index: i,\n         name: this.state.userName,\n         description: this.state.userDescription,\n         nameChange: this.handleNameChange,\n         descriptionChange: this.handleDescriptionChange\n       })\n     }) */\n    const popupOpened = this.props.isOpen ? 'popup_opened' : '';\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `popup popup_role_${this.props.name} ${popupOpened}`,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"popup__container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"popup__heading\",\n          children: this.props.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          className: \"form\",\n          name: this.props.name,\n          onSubmit: this.props.onSubmit,\n          children: [this.props.children, /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"form__submit button\",\n            type: \"submit\",\n            \"aria-label\": this.props.buttonText,\n            children: this.props.buttonText\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"button popup__button-close\",\n        type: \"button\",\n        \"aria-label\": \"\\u0417\\u0430\\u043A\\u0440\\u044B\\u0442\\u044C\",\n        onClick: this.props.onClose\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nPopupWithForm.contextType = CurrentUserContext;\nexport default PopupWithForm;","map":{"version":3,"sources":["/home/maksim/dev/mesto-react/src/components/PopupWithForm.js"],"names":["React","CurrentUserContext","PopupWithForm","Component","constructor","props","state","userName","userDescription","render","popupOpened","isOpen","name","title","onSubmit","children","buttonText","onClose","contextType"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,kBAAT,QAAmC,gCAAnC;;;AAEA,MAAMC,aAAN,SAA4BF,KAAK,CAACG,SAAlC,CAA4C;AAC1CC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AAAEC,MAAAA,QAAQ,EAAE,EAAZ;AAAgBC,MAAAA,eAAe,EAAE;AAAjC,KAAb;AACD;;AAIF;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIEC,EAAAA,MAAM,GAAG;AAER;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAII,UAAMC,WAAW,GAAG,KAAKL,KAAL,CAAWM,MAAX,GAAoB,cAApB,GAAqC,EAAzD;AAEA,wBACE;AAAK,MAAA,SAAS,EAAG,oBAAmB,KAAKN,KAAL,CAAWO,IAAK,IAAGF,WAAY,EAAnE;AAAA,8BACE;AAAK,QAAA,SAAS,EAAC,kBAAf;AAAA,gCACE;AAAI,UAAA,SAAS,EAAC,gBAAd;AAAA,oBAAgC,KAAKL,KAAL,CAAWQ;AAA3C;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAM,UAAA,SAAS,EAAC,MAAhB;AAAuB,UAAA,IAAI,EAAE,KAAKR,KAAL,CAAWO,IAAxC;AAA8C,UAAA,QAAQ,EAAE,KAAKP,KAAL,CAAWS,QAAnE;AAAA,qBACG,KAAKT,KAAL,CAAWU,QADd,eAEE;AAAQ,YAAA,SAAS,EAAC,qBAAlB;AAAwC,YAAA,IAAI,EAAC,QAA7C;AAAsD,0BAAY,KAAKV,KAAL,CAAWW,UAA7E;AAAA,sBAA0F,KAAKX,KAAL,CAAWW;AAArG;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAQE;AAAQ,QAAA,SAAS,EAAC,4BAAlB;AAA+C,QAAA,IAAI,EAAC,QAApD;AAA6D,sBAAW,4CAAxE;AAAkF,QAAA,OAAO,EAAE,KAAKX,KAAL,CAAWY;AAAtG;AAAA;AAAA;AAAA;AAAA,cARF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAYD;;AAjDyC;;AAAtCf,a,CAMGgB,W,GAAcjB,kB;AA8CvB,eAAeC,aAAf","sourcesContent":["import React from 'react';\nimport { CurrentUserContext } from \"../contexts/CurrentUserContext\";\n\nclass PopupWithForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { userName: '', userDescription: '' };\n  }\n\n  static contextType = CurrentUserContext;\n\n /* componentDidMount() {\n    this.setState( {userName: this.context.name, userDescription: this.context.about} )\n    console.log(this.context.name)\n  }\n\n  handleNameChange = (e) => {\n    this.setState( {userName: e.target.value} );\n  }\n\n  handleDescriptionChange = (e) => {\n    this.setState( {userDescription: e.target.value} );\n  } */\n  \n  render() {\n    \n   /* const childrenWithProps = React.Children.map(this.props.children, (child, i) => {\n      return React.cloneElement(child, {\n        index: i,\n        name: this.state.userName,\n        description: this.state.userDescription,\n        nameChange: this.handleNameChange,\n        descriptionChange: this.handleDescriptionChange\n      })\n    }) */\n\n    \n      \n    const popupOpened = this.props.isOpen ? 'popup_opened' : '';\n  \n    return (\n      <div className={`popup popup_role_${this.props.name} ${popupOpened}`}>\n        <div className=\"popup__container\">\n          <h2 className=\"popup__heading\">{this.props.title}</h2>\n          <form className=\"form\" name={this.props.name} onSubmit={this.props.onSubmit}>\n            {this.props.children}\n            <button className=\"form__submit button\" type=\"submit\" aria-label={this.props.buttonText}>{this.props.buttonText}</button>\n          </form>\n        </div>\n        <button className=\"button popup__button-close\" type=\"button\" aria-label=\"Закрыть\" onClick={this.props.onClose}></button>\n      </div>\n    );\n  }\n}\n\nexport default PopupWithForm;\n"]},"metadata":{},"sourceType":"module"}