{"ast":null,"code":"var _jsxFileName = \"/home/maksim/dev/mesto-react/src/components/PopupWithForm.js\";\nimport React from 'react';\nimport { CurrentUserContext } from \"../contexts/CurrentUserContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass PopupWithForm extends React.Component {\n  /* const currentUser = React.useContext(CurrentUserContext);\n    const [name, setName] = React.useState(currentUser.name);\n   const [description, setDescription] = React.useState(currentUser.about);\n    React.useEffect(() => {\n     setName(currentUser.name);\n     setDescription(currentUser.about);\n   }, [currentUser]); */\n  constructor(props) {\n    super(props);\n    this.state = {\n      userName: this.context.name,\n      userDescription: this.context.about\n    };\n  }\n\n  componentDidMount() {\n    this.setState({\n      userName: this.context.name,\n      userDescription: this.context.about\n    });\n  }\n  /* handleNameChange = (e) => {\n     setName(e.target.value);\n   }\n    handleDescriptionChange = (e) => {\n     setDescription(e.target.value);\n   }*/\n\n\n  render() {\n    const popupOpened = this.props.isOpen ? 'popup_opened' : '';\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `popup popup_role_${this.props.name} ${popupOpened}`,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"popup__container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"popup__heading\",\n          children: this.props.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          className: \"form\",\n          name: this.props.name,\n          onSubmit: this.props.onSubmit,\n          children: [this.props.children, /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"form__submit button\",\n            type: \"submit\",\n            \"aria-label\": this.props.buttonText,\n            children: this.props.buttonText\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"button popup__button-close\",\n        type: \"button\",\n        \"aria-label\": \"\\u0417\\u0430\\u043A\\u0440\\u044B\\u0442\\u044C\",\n        onClick: this.props.onClose\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default PopupWithForm;","map":{"version":3,"sources":["/home/maksim/dev/mesto-react/src/components/PopupWithForm.js"],"names":["React","CurrentUserContext","PopupWithForm","Component","constructor","props","state","userName","context","name","userDescription","about","componentDidMount","setState","render","popupOpened","isOpen","title","onSubmit","children","buttonText","onClose"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,kBAAT,QAAmC,gCAAnC;;;AAEA,MAAMC,aAAN,SAA4BF,KAAK,CAACG,SAAlC,CAA4C;AAE3C;AACD;AACA;AACA;AACA;AACA;AACA;AAIEC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AAAEC,MAAAA,QAAQ,EAAE,KAAKC,OAAL,CAAaC,IAAzB;AAA+BC,MAAAA,eAAe,EAAE,KAAKF,OAAL,CAAaG;AAA7D,KAAb;AACD;;AAEDC,EAAAA,iBAAiB,GAAG;AAClB,SAAKC,QAAL,CAAe;AAACN,MAAAA,QAAQ,EAAE,KAAKC,OAAL,CAAaC,IAAxB;AAA8BC,MAAAA,eAAe,EAAE,KAAKF,OAAL,CAAaG;AAA5D,KAAf;AACD;AAEF;AACD;AACA;AACA;AACA;AACA;;;AAGEG,EAAAA,MAAM,GAAG;AAEP,UAAMC,WAAW,GAAG,KAAKV,KAAL,CAAWW,MAAX,GAAoB,cAApB,GAAqC,EAAzD;AAEA,wBACE;AAAK,MAAA,SAAS,EAAG,oBAAmB,KAAKX,KAAL,CAAWI,IAAK,IAAGM,WAAY,EAAnE;AAAA,8BACE;AAAK,QAAA,SAAS,EAAC,kBAAf;AAAA,gCACE;AAAI,UAAA,SAAS,EAAC,gBAAd;AAAA,oBAAgC,KAAKV,KAAL,CAAWY;AAA3C;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAM,UAAA,SAAS,EAAC,MAAhB;AAAuB,UAAA,IAAI,EAAE,KAAKZ,KAAL,CAAWI,IAAxC;AAA8C,UAAA,QAAQ,EAAE,KAAKJ,KAAL,CAAWa,QAAnE;AAAA,qBACG,KAAKb,KAAL,CAAWc,QADd,eAEE;AAAQ,YAAA,SAAS,EAAC,qBAAlB;AAAwC,YAAA,IAAI,EAAC,QAA7C;AAAsD,0BAAY,KAAKd,KAAL,CAAWe,UAA7E;AAAA,sBAA0F,KAAKf,KAAL,CAAWe;AAArG;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAQE;AAAQ,QAAA,SAAS,EAAC,4BAAlB;AAA+C,QAAA,IAAI,EAAC,QAApD;AAA6D,sBAAW,4CAAxE;AAAkF,QAAA,OAAO,EAAE,KAAKf,KAAL,CAAWgB;AAAtG;AAAA;AAAA;AAAA;AAAA,cARF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAYD;;AA7CyC;;AAgD5C,eAAenB,aAAf","sourcesContent":["import React from 'react';\nimport { CurrentUserContext } from \"../contexts/CurrentUserContext\";\n\nclass PopupWithForm extends React.Component {\n\n /* const currentUser = React.useContext(CurrentUserContext);\n\n  const [name, setName] = React.useState(currentUser.name);\n  const [description, setDescription] = React.useState(currentUser.about);\n\n  React.useEffect(() => {\n    setName(currentUser.name);\n    setDescription(currentUser.about);\n  }, [currentUser]); */\n\n  constructor(props) {\n    super(props);\n    this.state = { userName: this.context.name, userDescription: this.context.about };\n  }\n\n  componentDidMount() {\n    this.setState( {userName: this.context.name, userDescription: this.context.about} )\n  }\n\n /* handleNameChange = (e) => {\n    setName(e.target.value);\n  }\n\n  handleDescriptionChange = (e) => {\n    setDescription(e.target.value);\n  }*/\n  \n  render() {\n  \n    const popupOpened = this.props.isOpen ? 'popup_opened' : '';\n  \n    return (\n      <div className={`popup popup_role_${this.props.name} ${popupOpened}`}>\n        <div className=\"popup__container\">\n          <h2 className=\"popup__heading\">{this.props.title}</h2>\n          <form className=\"form\" name={this.props.name} onSubmit={this.props.onSubmit}>\n            {this.props.children}\n            <button className=\"form__submit button\" type=\"submit\" aria-label={this.props.buttonText}>{this.props.buttonText}</button>\n          </form>\n        </div>\n        <button className=\"button popup__button-close\" type=\"button\" aria-label=\"Закрыть\" onClick={this.props.onClose}></button>\n      </div>\n    );\n  }\n}\n\nexport default PopupWithForm;\n"]},"metadata":{},"sourceType":"module"}