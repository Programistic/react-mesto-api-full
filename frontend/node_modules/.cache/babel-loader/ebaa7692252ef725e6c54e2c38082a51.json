{"ast":null,"code":"export const BASE_URL = 'https://auth.nomoreparties.co';\nexport const register = (email, password) => {\n  return fetch(`${BASE_URL}/signup`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      email,\n      password\n    })\n  }).then(getResponseData);\n};\nexport const authorize = (email, password) => {\n  return fetch(`${BASE_URL}/signin`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      email,\n      password\n    })\n  }).then(data => {\n    if (data !== undefined && data.token) {\n      localStorage.setItem('jwt', data.token);\n    } else {\n      return;\n    }\n  });\n};\nexport const getContent = token => {\n  return fetch(`${BASE_URL}/users/me`, {\n    method: 'GET',\n    headers: {\n      'Content-Type': 'application/json',\n      'Authorization': `Bearer ${token}`\n    }\n  }).then(res => res.json()).then(data => data).then(getResponseData);\n};\n\nconst getResponseData = res => {\n  return res.ok ? res.json() : res.json().then(res => {\n    Promise.reject(`Ошибка: ${res.error === undefined ? res.message : res.error}`);\n  });\n};","map":{"version":3,"sources":["/home/maksim/dev/mesto-react-auth/src/utils/Auth.js"],"names":["BASE_URL","register","email","password","fetch","method","headers","body","JSON","stringify","then","getResponseData","authorize","data","undefined","token","localStorage","setItem","getContent","res","json","ok","Promise","reject","error","message"],"mappings":"AAAA,OAAO,MAAMA,QAAQ,GAAG,+BAAjB;AAEP,OAAO,MAAMC,QAAQ,GAAG,CAACC,KAAD,EAAQC,QAAR,KAAqB;AAC3C,SAAOC,KAAK,CAAE,GAAEJ,QAAS,SAAb,EAAuB;AACjCK,IAAAA,MAAM,EAAE,MADyB;AAEjCC,IAAAA,OAAO,EAAE;AACP,sBAAgB;AADT,KAFwB;AAKjCC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAACP,MAAAA,KAAD;AAAQC,MAAAA;AAAR,KAAf;AAL2B,GAAvB,CAAL,CAOJO,IAPI,CAOCC,eAPD,CAAP;AAQD,CATM;AAWP,OAAO,MAAMC,SAAS,GAAG,CAACV,KAAD,EAAQC,QAAR,KAAqB;AAC5C,SAAOC,KAAK,CAAE,GAAEJ,QAAS,SAAb,EAAuB;AACjCK,IAAAA,MAAM,EAAE,MADyB;AAEjCC,IAAAA,OAAO,EAAE;AACP,sBAAgB;AADT,KAFwB;AAKjCC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAACP,MAAAA,KAAD;AAAQC,MAAAA;AAAR,KAAf;AAL2B,GAAvB,CAAL,CAOJO,IAPI,CAOEG,IAAD,IAAU;AACd,QAAIA,IAAI,KAAKC,SAAT,IAAsBD,IAAI,CAACE,KAA/B,EAAsC;AACpCC,MAAAA,YAAY,CAACC,OAAb,CAAqB,KAArB,EAA4BJ,IAAI,CAACE,KAAjC;AACD,KAFD,MAEO;AACL;AACD;AACF,GAbI,CAAP;AAcD,CAfM;AAiBP,OAAO,MAAMG,UAAU,GAAIH,KAAD,IAAW;AACnC,SAAOX,KAAK,CAAE,GAAEJ,QAAS,WAAb,EAAyB;AACnCK,IAAAA,MAAM,EAAE,KAD2B;AAEnCC,IAAAA,OAAO,EAAE;AACP,sBAAgB,kBADT;AAEP,uBAAkB,UAASS,KAAM;AAF1B;AAF0B,GAAzB,CAAL,CAOJL,IAPI,CAOCS,GAAG,IAAIA,GAAG,CAACC,IAAJ,EAPR,EAQJV,IARI,CAQCG,IAAI,IAAIA,IART,EASJH,IATI,CASCC,eATD,CAAP;AAUD,CAXM;;AAaP,MAAMA,eAAe,GAAIQ,GAAD,IAAS;AAC/B,SAAOA,GAAG,CAACE,EAAJ,GAASF,GAAG,CAACC,IAAJ,EAAT,GAAsBD,GAAG,CAACC,IAAJ,GAAWV,IAAX,CAAiBS,GAAD,IAAS;AACpDG,IAAAA,OAAO,CAACC,MAAR,CAAgB,WAAUJ,GAAG,CAACK,KAAJ,KAAcV,SAAd,GAA0BK,GAAG,CAACM,OAA9B,GAAwCN,GAAG,CAACK,KAAM,EAA5E;AACD,GAF4B,CAA7B;AAGD,CAJD","sourcesContent":["export const BASE_URL = 'https://auth.nomoreparties.co';\n\nexport const register = (email, password) => {\n  return fetch(`${BASE_URL}/signup`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({email, password})\n  })\n    .then(getResponseData)\n};\n\nexport const authorize = (email, password) => {\n  return fetch(`${BASE_URL}/signin`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({email, password})\n  })\n    .then((data) => {\n      if (data !== undefined && data.token) {\n        localStorage.setItem('jwt', data.token);\n      } else {\n        return;\n      }\n    })\n};\n\nexport const getContent = (token) => {\n  return fetch(`${BASE_URL}/users/me`, {\n    method: 'GET',\n    headers: {\n      'Content-Type': 'application/json',\n      'Authorization': `Bearer ${token}`,\n    }\n  })\n    .then(res => res.json())\n    .then(data => data)\n    .then(getResponseData)\n}\n\nconst getResponseData = (res) => {\n  return res.ok ? res.json() : res.json().then((res) => {\n    Promise.reject(`Ошибка: ${res.error === undefined ? res.message : res.error}`);\n  });\n}\n"]},"metadata":{},"sourceType":"module"}