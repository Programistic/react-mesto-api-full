{"ast":null,"code":"var _jsxFileName = \"/home/maksim/dev/mesto-react-auth/src/components/App.js\";\nimport { Component } from 'react';\nimport { Route, Switch, Redirect, withRouter } from 'react-router-dom';\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\nimport api from '../utils/Api';\nimport Header from './Header';\nimport Main from './Main';\nimport Footer from './Footer';\nimport EditProfilePopup from './EditProfilePopup';\nimport EditAvatarPopup from './EditAvatarPopup';\nimport AddPlacePopup from './AddPlacePopup';\nimport ImagePopup from './ImagePopup';\nimport ConfirmDeletePopup from './ConfirmDeletePopup';\nimport ProtectedRoute from './ProtectedRoute';\nimport Register from './Register';\nimport Login from './Login';\nimport InfoTooltip from './InfoTooltip';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleLogin = () => {\n      this.setState({\n        loggedIn: true\n      });\n    };\n\n    this.handleEditProfileClick = () => {\n      this.setState({\n        isEditProfilePopupOpen: true\n      });\n    };\n\n    this.handleAddPlaceClick = () => {\n      this.setState({\n        isAddPlacePopupOpen: true\n      });\n    };\n\n    this.handleEditAvatarClick = () => {\n      this.setState({\n        isEditAvatarPopupOpen: true\n      });\n    };\n\n    this.handleConfirmDeleteCardClick = () => {\n      this.setState({\n        isConfirmPopupOpen: true\n      });\n    };\n\n    this.handleEscClick = event => {\n      if (event.key === 'Escape') {\n        this.closeAllPopups();\n      }\n    };\n\n    this.handleOutsideClick = event => {\n      if (event.target.classList.contains('popup')) {\n        this.closeAllPopups();\n      }\n    };\n\n    this.handleUpdateUser = (userName, userDescription) => {\n      api.setUserInfo(userName, userDescription).then(userData => {\n        this.setState({\n          currentUser: userData\n        });\n        this.closeAllPopups();\n      }).catch(err => {\n        console.log(err);\n      });\n    };\n\n    this.handleUpdateAvatar = userAvatar => {\n      api.setAvatar(userAvatar).then(userData => {\n        this.setState({\n          currentUser: userData\n        });\n        this.closeAllPopups();\n      }).catch(err => {\n        console.log(err);\n      });\n    };\n\n    this.handleCardLike = card => {\n      const isLiked = card.likes.some(like => like._id === this.state.currentUser._id);\n      api.changeLikeCardStatus(card._id, isLiked).then(getCard => {\n        this.setState({\n          cards: this.state.cards.map(oldCard => oldCard._id === getCard._id ? getCard : oldCard)\n        });\n      }).catch(err => {\n        console.log(err);\n      });\n    };\n\n    this.handleCardDelete = () => {\n      api.deleteCard(this.state.deleteCard._id).then(() => {\n        this.setState({\n          cards: this.state.cards.filter(currentCard => currentCard._id !== this.state.deleteCard._id),\n          isConfirmPopupOpen: false\n        });\n      }).catch(err => {\n        console.log(err);\n      });\n    };\n\n    this.handleCardClick = card => {\n      this.setState({\n        selectedCard: card\n      });\n    };\n\n    this.handleAddPlace = (placeName, placeImage) => {\n      api.setCard(placeName, placeImage).then(newCard => {\n        this.setState({\n          cards: [newCard, ...this.state.cards]\n        });\n        this.closeAllPopups();\n      }).catch(err => {\n        console.log(err);\n      });\n    };\n\n    this.closeAllPopups = () => {\n      this.setState({\n        isEditProfilePopupOpen: false,\n        isAddPlacePopupOpen: false,\n        isEditAvatarPopupOpen: false,\n        isConfirmPopupOpen: false,\n        isInfoTooltipOpen: false,\n        selectedCard: {}\n      });\n    };\n\n    this.openConfirmDeletePopup = card => {\n      this.setState({\n        deleteCard: card,\n        isConfirmPopupOpen: true\n      });\n    };\n\n    this.openTooltipSuccess = () => {\n      this.setState({\n        isInfoTooltipOpen: true,\n        infoTooltipButtonName: 'success',\n        infoTooltipMessage: 'Вы успешно зарегистрировались!'\n      });\n    };\n\n    this.openTooltipFail = () => {\n      this.setState({\n        isInfoTooltipOpen: true,\n        infoTooltipButtonName: 'fail',\n        infoTooltipMessage: 'Что-то пошло не так! Попробуйте ещё раз.'\n      });\n    };\n\n    this.infoTooltipConfirm = () => {\n      this.closeAllPopups();\n    };\n\n    this.state = {\n      isEditProfilePopupOpen: false,\n      isAddPlacePopupOpen: false,\n      isEditAvatarPopupOpen: false,\n      isConfirmPopupOpen: false,\n      isInfoTooltipOpen: false,\n      infoTooltipButtonName: '',\n      infoTooltipMessage: '',\n      selectedCard: {},\n      deleteCard: {},\n      cards: [],\n      currentUser: {},\n      loggedIn: true\n    };\n    this.handleLogin = this.handleLogin.bind(this);\n  }\n\n  componentDidMount() {\n    api.getUserInfo().then(userData => {\n      this.setState({\n        currentUser: userData\n      });\n    }).catch(err => {\n      console.log(err);\n    });\n    api.getCards().then(getCardsArray => {\n      this.setState({\n        cards: getCardsArray\n      });\n    }).catch(err => {\n      console.log(err);\n    });\n    document.addEventListener(\"keydown\", this.handleEscClick);\n    document.addEventListener(\"click\", this.handleOutsideClick);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener(\"keydown\", this.handleEscClick);\n    document.addEventListener(\"click\", this.handleOutsideClick);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"page\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: /*#__PURE__*/_jsxDEV(CurrentUserContext.Provider, {\n          value: this.state.currentUser,\n          children: [/*#__PURE__*/_jsxDEV(Header, {\n            loggedIn: this.state.loggedIn\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Switch, {\n            children: [/*#__PURE__*/_jsxDEV(ProtectedRoute, {\n              path: \"/main\",\n              loggedIn: this.state.loggedIn,\n              cards: this.state.cards,\n              onEditProfile: this.handleEditProfileClick,\n              onAddPlace: this.handleAddPlaceClick,\n              onEditAvatar: this.handleEditAvatarClick,\n              onCardLike: this.handleCardLike,\n              onCardDelete: this.openConfirmDeletePopup,\n              onCardClick: this.handleCardClick,\n              component: Main\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 211,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Route, {\n              path: \"/signin\",\n              children: /*#__PURE__*/_jsxDEV(Login, {\n                handleLogin: this.handleLogin\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 225,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 224,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Route, {\n              path: \"/signup\",\n              children: /*#__PURE__*/_jsxDEV(Register, {\n                tooltipSuccess: this.openTooltipSuccess,\n                tooltipFail: this.openTooltipFail\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 229,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 228,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Route, {\n              children: this.state.loggedIn ? /*#__PURE__*/_jsxDEV(Redirect, {\n                to: \"/signup\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 233,\n                columnNumber: 40\n              }, this) : /*#__PURE__*/_jsxDEV(Redirect, {\n                to: \"/signin\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 233,\n                columnNumber: 68\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 232,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 13\n          }, this), this.state.loggedIn && /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 238,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(EditProfilePopup, {\n            isOpen: this.state.isEditProfilePopupOpen,\n            onUpdateUser: this.handleUpdateUser,\n            onClose: this.closeAllPopups\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 241,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(EditAvatarPopup, {\n            isOpen: this.state.isEditAvatarPopupOpen,\n            onUpdateAvatar: this.handleUpdateAvatar,\n            onClose: this.closeAllPopups\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 247,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(AddPlacePopup, {\n            isOpen: this.state.isAddPlacePopupOpen,\n            onAddPlace: this.handleAddPlace,\n            onClose: this.closeAllPopups\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 253,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ConfirmDeletePopup, {\n            isOpen: this.state.isConfirmPopupOpen,\n            onConfirmDeleteCard: this.handleCardDelete,\n            onClose: this.closeAllPopups\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 259,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ImagePopup, {\n            card: this.state.selectedCard,\n            onClose: this.closeAllPopups\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 265,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(InfoTooltip, {\n            isOpen: this.state.isInfoTooltipOpen,\n            message: this.state.infoTooltipMessage,\n            buttonName: this.state.infoTooltipButtonName,\n            onConfirm: this.infoTooltipConfirm,\n            onClose: this.closeAllPopups\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 270,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default _c = withRouter(App);\n\nvar _c;\n\n$RefreshReg$(_c, \"%default%\");","map":{"version":3,"sources":["/home/maksim/dev/mesto-react-auth/src/components/App.js"],"names":["Component","Route","Switch","Redirect","withRouter","CurrentUserContext","api","Header","Main","Footer","EditProfilePopup","EditAvatarPopup","AddPlacePopup","ImagePopup","ConfirmDeletePopup","ProtectedRoute","Register","Login","InfoTooltip","App","constructor","props","handleLogin","setState","loggedIn","handleEditProfileClick","isEditProfilePopupOpen","handleAddPlaceClick","isAddPlacePopupOpen","handleEditAvatarClick","isEditAvatarPopupOpen","handleConfirmDeleteCardClick","isConfirmPopupOpen","handleEscClick","event","key","closeAllPopups","handleOutsideClick","target","classList","contains","handleUpdateUser","userName","userDescription","setUserInfo","then","userData","currentUser","catch","err","console","log","handleUpdateAvatar","userAvatar","setAvatar","handleCardLike","card","isLiked","likes","some","like","_id","state","changeLikeCardStatus","getCard","cards","map","oldCard","handleCardDelete","deleteCard","filter","currentCard","handleCardClick","selectedCard","handleAddPlace","placeName","placeImage","setCard","newCard","isInfoTooltipOpen","openConfirmDeletePopup","openTooltipSuccess","infoTooltipButtonName","infoTooltipMessage","openTooltipFail","infoTooltipConfirm","bind","componentDidMount","getUserInfo","getCards","getCardsArray","document","addEventListener","componentWillUnmount","removeEventListener","render"],"mappings":"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","sourcesContent":["import { Component } from 'react';\nimport { Route, Switch, Redirect, withRouter } from 'react-router-dom';\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\nimport api from '../utils/Api';\nimport Header from './Header';\nimport Main from './Main';\nimport Footer from './Footer';\nimport EditProfilePopup from './EditProfilePopup';\nimport EditAvatarPopup from './EditAvatarPopup';\nimport AddPlacePopup from './AddPlacePopup';\nimport ImagePopup from './ImagePopup';\nimport ConfirmDeletePopup from './ConfirmDeletePopup';\nimport ProtectedRoute from './ProtectedRoute';\nimport Register from './Register';\nimport Login from './Login';\nimport InfoTooltip from './InfoTooltip';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      isEditProfilePopupOpen: false,\n      isAddPlacePopupOpen: false,\n      isEditAvatarPopupOpen: false,\n      isConfirmPopupOpen: false,\n      isInfoTooltipOpen: false,\n      infoTooltipButtonName: '',\n      infoTooltipMessage: '',\n      selectedCard: {},\n      deleteCard: {},\n      cards: [],\n      currentUser: {},\n      loggedIn: true\n    };\n    this.handleLogin = this.handleLogin.bind(this);\n  }\n\n  handleLogin = () => {\n    this.setState({ loggedIn: true })\n  }\n\n  handleEditProfileClick = () => {\n    this.setState({ isEditProfilePopupOpen: true });\n  }\n\n  handleAddPlaceClick = () => {\n    this.setState({ isAddPlacePopupOpen: true });\n  }\n\n  handleEditAvatarClick = () => {\n    this.setState({ isEditAvatarPopupOpen: true });\n  }\n\n  handleConfirmDeleteCardClick = () => {\n    this.setState({ isConfirmPopupOpen: true });\n  }\n\n  handleEscClick = (event) => {\n    if (event.key === 'Escape') {\n      this.closeAllPopups();\n    }\n  }\n\n  handleOutsideClick = (event) => {\n    if (event.target.classList.contains('popup')) {\n      this.closeAllPopups();\n    }\n  }\n\n  handleUpdateUser = (userName, userDescription) => {\n    api.setUserInfo(userName, userDescription)\n      .then(userData => {\n        this.setState({ currentUser: userData });\n        this.closeAllPopups();\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }\n\n  handleUpdateAvatar = (userAvatar) => {\n    api.setAvatar(userAvatar)\n      .then(userData => {\n        this.setState({ currentUser: userData });\n        this.closeAllPopups();\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }\n\n  handleCardLike = (card) => {\n\n    const isLiked = card.likes.some(like => like._id === this.state.currentUser._id);\n\n    api.changeLikeCardStatus(card._id, isLiked)\n      .then(getCard => {\n        this.setState({ cards: this.state.cards.map(oldCard => oldCard._id === getCard._id ? getCard : oldCard) });\n      })\n      .catch(err => {\n        console.log(err);\n      });\n  }\n\n  handleCardDelete = () => {\n    api.deleteCard(this.state.deleteCard._id)\n      .then(() => {\n        this.setState(\n          {\n            cards: this.state.cards.filter(currentCard => currentCard._id !== this.state.deleteCard._id),\n            isConfirmPopupOpen: false\n          }\n        ); \n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }\n\n  handleCardClick = (card) => {\n    this.setState({ selectedCard: card });\n  }\n\n  handleAddPlace = (placeName, placeImage) => {\n    api.setCard(placeName, placeImage)\n    .then(newCard => {\n      this.setState({ cards: [newCard, ...this.state.cards] });\n      this.closeAllPopups();\n    })\n    .catch((err) => {\n      console.log(err);\n    });\n  }\n\n  componentDidMount() {\n    api.getUserInfo()\n      .then(userData => {\n        this.setState({ currentUser: userData });\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n\n      api.getCards()\n      .then(getCardsArray => {\n        this.setState({ cards: getCardsArray });\n      })\n      .catch(err => {\n        console.log(err);\n      });\n\n    document.addEventListener(\"keydown\", this.handleEscClick);\n    document.addEventListener(\"click\", this.handleOutsideClick);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener(\"keydown\", this.handleEscClick);\n    document.addEventListener(\"click\", this.handleOutsideClick);\n  }\n\n  closeAllPopups = () => {\n    this.setState(\n      {\n        isEditProfilePopupOpen: false,\n        isAddPlacePopupOpen: false,\n        isEditAvatarPopupOpen: false,\n        isConfirmPopupOpen: false,\n        isInfoTooltipOpen: false,\n        selectedCard: {}\n      }\n    );\n  }\n\n  openConfirmDeletePopup = (card) => {\n    this.setState({ deleteCard: card, isConfirmPopupOpen: true });\n  }\n\n  openTooltipSuccess = () => {\n    this.setState({\n      isInfoTooltipOpen: true,\n      infoTooltipButtonName: 'success',\n      infoTooltipMessage: 'Вы успешно зарегистрировались!'\n    });\n  }\n\n  openTooltipFail = () => {\n    this.setState({\n      isInfoTooltipOpen: true,\n      infoTooltipButtonName: 'fail',\n      infoTooltipMessage: 'Что-то пошло не так! Попробуйте ещё раз.'\n    });\n  }\n\n  infoTooltipConfirm = () => {\n    \n    this.closeAllPopups();\n  }\n\n  render() {\n    return (\n      <div className=\"page\">\n        <div className=\"container\">\n\n          <CurrentUserContext.Provider value={this.state.currentUser}>\n\n            <Header loggedIn={this.state.loggedIn} />\n\n            <Switch>\n\n              <ProtectedRoute\n                path=\"/main\"\n                loggedIn={this.state.loggedIn}\n                cards={this.state.cards}\n                onEditProfile={this.handleEditProfileClick}\n                onAddPlace={this.handleAddPlaceClick}\n                onEditAvatar={this.handleEditAvatarClick}\n                onCardLike={this.handleCardLike}\n                onCardDelete={this.openConfirmDeletePopup}\n                onCardClick={this.handleCardClick}\n                component={Main}>\n              </ProtectedRoute>\n\n              <Route path=\"/signin\">\n                <Login handleLogin={this.handleLogin} />\n              </Route>\n\n              <Route path=\"/signup\">\n                <Register tooltipSuccess={this.openTooltipSuccess} tooltipFail={this.openTooltipFail} />\n              </Route>\n\n              <Route>\n                {this.state.loggedIn ? <Redirect to=\"/signup\" /> : <Redirect to=\"/signin\" />}\n              </Route>\n\n            </Switch>\n\n            {this.state.loggedIn && <Footer />}\n            \n\n            <EditProfilePopup\n              isOpen={this.state.isEditProfilePopupOpen}\n              onUpdateUser={this.handleUpdateUser}\n              onClose={this.closeAllPopups}\n            />\n\n            <EditAvatarPopup\n              isOpen={this.state.isEditAvatarPopupOpen}\n              onUpdateAvatar={this.handleUpdateAvatar}\n              onClose={this.closeAllPopups}\n            />\n\n            <AddPlacePopup\n              isOpen={this.state.isAddPlacePopupOpen}\n              onAddPlace={this.handleAddPlace}\n              onClose={this.closeAllPopups}\n            />\n\n            <ConfirmDeletePopup\n              isOpen={this.state.isConfirmPopupOpen}\n              onConfirmDeleteCard={this.handleCardDelete}\n              onClose={this.closeAllPopups}\n            />\n\n            <ImagePopup\n              card={this.state.selectedCard}\n              onClose={this.closeAllPopups}\n            />\n\n            <InfoTooltip\n              isOpen={this.state.isInfoTooltipOpen}\n              message={this.state.infoTooltipMessage}\n              buttonName={this.state.infoTooltipButtonName}\n              onConfirm={this.infoTooltipConfirm}\n              onClose={this.closeAllPopups}\n            />\n\n          </CurrentUserContext.Provider>\n          \n        </div>\n      </div>\n    );\n  } \n}\n\nexport default withRouter(App);\n\n"]},"metadata":{},"sourceType":"module"}